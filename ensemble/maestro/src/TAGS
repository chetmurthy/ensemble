
./corba/Maestro_CORBA.C,3936
Maestro_CORBA_Base::marshalSize(unsigned alignment) {marshalSize14,340
ostream& operator<< (ostream &out, Maestro_CORBA_Base &base) {operator <<22,507
Maestro_CORBA_Message::Maestro_CORBA_Message() { Maestro_CORBA_Message30,675
Maestro_CORBA_Message::Maestro_CORBA_Message(Maestro_CORBA_Message35,831
Maestro_CORBA_Message::rewind() {rewind46,1051
Maestro_CORBA_Message::body() {body52,1212
Maestro_CORBA_Message::localByteOrder() {localByteOrder65,1488
Maestro_CORBA_Message::msgByteOrder(Maestro_CORBA_Boolean byteOrder) { msgByteOrder75,1619
Maestro_CORBA_Message::swap(Maestro_CORBA_UShort v) {swap81,1744
Maestro_CORBA_Message::swap(Maestro_CORBA_Short v) {swap93,1946
Maestro_CORBA_Message::swap(Maestro_CORBA_ULong v) {swap98,2086
Maestro_CORBA_Message::swap(Maestro_CORBA_Long v) {swap112,2328
Maestro_CORBA_Message::operator>> (Maestro_CORBA_Short &v) { operator >>119,2535
Maestro_CORBA_Message::operator>> (Maestro_CORBA_UShort &v) {operator >>127,2735
Maestro_CORBA_Message::operator>> (Maestro_CORBA_Long &v) {operator >>135,2934
Maestro_CORBA_Message::operator>> (Maestro_CORBA_ULong &v) {operator >>143,3131
Maestro_CORBA_Message::operator>> (Maestro_CORBA_Octet &v) {operator >>152,3401
Maestro_CORBA_Message::operator<< (Maestro_CORBA_Short v) {operator <<160,3583
Maestro_CORBA_Message::operator<< (Maestro_CORBA_UShort v) {operator <<167,3755
Maestro_CORBA_Message::operator<< (Maestro_CORBA_Long v) {operator <<174,3929
Maestro_CORBA_Message::operator<< (Maestro_CORBA_ULong v) {operator <<181,4101
Maestro_CORBA_Message::operator<< (Maestro_CORBA_Octet v) {operator <<188,4273
Maestro_CORBA_Message::operator>> (Maestro_CORBA_Base &v) { operator >>196,4458
Maestro_CORBA_Message::operator<< (Maestro_CORBA_Base &v) { operator <<202,4579
Maestro_CORBA_Message::operator>> (Maestro_Message &maeMsg) {operator >>209,4731
Maestro_CORBA_Message::operator<< (Maestro_Message &maeMsg) {operator <<231,5309
Maestro_CORBA_OctetSequence::operator>> (Maestro_CORBA_Message& msg) {operator >>255,5775
Maestro_CORBA_OctetSequence::operator<< (Maestro_CORBA_Message& msg) {operator <<262,5924
Maestro_CORBA_Serializable::operator>> (Maestro_CORBA_OctetSequence &seq) {operator >>276,6399
Maestro_CORBA_Serializable::writeTo(Maestro_CORBA_OctetSequence &seq) {writeTo281,6500
Maestro_CORBA_Serializable::operator<< (Maestro_CORBA_OctetSequence &seq) {operator <<292,6804
Maestro_CORBA_Serializable::readFrom(Maestro_CORBA_OctetSequence &seq) {readFrom297,6906
void operator>> (Maestro_CORBA_OctetSequence &seq,operator >>308,7177
void operator<< (Maestro_CORBA_OctetSequence &seq,operator <<314,7290
Maestro_CORBA_String::Maestro_CORBA_String(char *str) {Maestro_CORBA_String350,8128
Maestro_CORBA_String::~Maestro_CORBA_String() { ~Maestro_CORBA_String369,8466
Maestro_CORBA_String::Maestro_CORBA_String(Maestro_CORBA_String& str) {Maestro_CORBA_String380,8662
Maestro_CORBA_String::operator= (Maestro_CORBA_String &str) {operator =403,9145
Maestro_CORBA_String::operator= (char *p) {operator =438,9783
Maestro_CORBA_String::operator== (Maestro_CORBA_String& str) {operator ==466,10232
Maestro_CORBA_String::operator>> (ostream &out) {operator >>477,10511
Maestro_CORBA_String::operator>> (Maestro_CORBA_Message& msg) {operator >>486,10677
Maestro_CORBA_String::operator<< (Maestro_CORBA_Message& msg) {operator <<496,10882
char Maestro_CORBA_String::NULL_STRING[1] = "";NULL_STRING515,11277
operator>> (Maestro_Message &msg,operator >>518,11344
operator<< (Maestro_Message &msg,operator <<533,11655
Maestro_CORBA_Exception::Maestro_CORBA_Exception(Maestro_CORBA_Exception541,11859
Maestro_CORBA_Exception::operator<< (Maestro_CORBA_Message &msg) {operator <<552,12102
Maestro_CORBA_Exception::operator>> (Maestro_CORBA_Message &msg) {operator >>562,12350
Maestro_CORBA_Exception::operator>> (ostream &out) {operator >>568,12517

./corba/Maestro_CORBA.h,6156
#define __MAESTRO_CORBA_H____MAESTRO_CORBA_H__8,236
class Maestro_CORBA_Base {Maestro_CORBA_Base19,500
  virtual void operator>> (Maestro_CORBA_Message &msg) { assert(0); }operator >>22,602
  virtual void operator<< (Maestro_CORBA_Message &msg) { assert(0); }operator <<25,741
  virtual void operator>> (ostream &out) { assert(0); }operator >>28,842
#define Maestro_CORBA_Sequence(Maestro_CORBA_Sequence42,1314
typedef hot_int16     Maestro_CORBA_Short;Maestro_CORBA_Short167,9512
typedef hot_uint16    Maestro_CORBA_UShort;Maestro_CORBA_UShort168,9555
typedef hot_int32     Maestro_CORBA_Long;Maestro_CORBA_Long169,9599
typedef hot_uint32    Maestro_CORBA_ULong;Maestro_CORBA_ULong170,9641
typedef unsigned char Maestro_CORBA_Char;Maestro_CORBA_Char171,9684
typedef unsigned char Maestro_CORBA_Boolean;Maestro_CORBA_Boolean172,9726
typedef unsigned char Maestro_CORBA_Octet;Maestro_CORBA_Octet173,9771
class Maestro_CORBA_Message: public Maestro_Base {Maestro_CORBA_Message186,10207
  virtual void reset() { msg.reset(); }reset199,10525
  virtual void align(unsigned n) { msg.align(n); }align200,10565
  virtual unsigned size() { return msg.size(); }size201,10616
  virtual unsigned pos() { return msg.getPos(); }pos202,10665
  virtual void pos(unsigned n) { msg.setPos(n); }pos203,10715
  virtual Maestro_CORBA_Boolean msgByteOrder() { return _byteOrder; }msgByteOrder211,11053
  virtual void write(void *buf, unsigned size) { msg.write(buf, size); }write237,12009
  virtual void read(void *buf, unsigned size) { msg.read(buf, size); }read257,12592
  int operator== (Maestro_CORBA_Message& m) { return 0; }operator ==270,13057
    Maestro_Message msg;msg273,13125
    Maestro_CORBA_Boolean _byteOrder;_byteOrder274,13150
typedef Maestro_OrderedSet(Maestro_CORBA_Message)Maestro_OrderedSet278,13193
typedef Maestro_CORBA_Sequence(Maestro_CORBA_Octet)  Maestro_CORBA_Sequence281,13273
class Maestro_CORBA_OctetSequence: Maestro_CORBA_OctetSequence285,13365
  Maestro_CORBA_OctetSequence():Maestro_CORBA_OctetSequence289,13462
  Maestro_CORBA_OctetSequence(Maestro_CORBA_Octet o):Maestro_CORBA_OctetSequence292,13538
  Maestro_CORBA_OctetSequence(Maestro_CORBA_OctetSequence &seq):Maestro_CORBA_OctetSequence295,13636
  Maestro_CORBA_OctetSequence(Maestro_CORBA_Octet *data, Maestro_CORBA_OctetSequence298,13747
class Maestro_CORBA_Serializable: virtual public Maestro_CORBA_Base {Maestro_CORBA_Serializable311,14171
struct Maestro_CORBA_String: virtual public Maestro_CORBA_Serializable {Maestro_CORBA_String344,15205
  char *s;s356,15731
  Maestro_CORBA_ULong size;size357,15742
  static char NULL_STRING[1];NULL_STRING358,15770
enum Maestro_CORBA_ExceptionCode {Maestro_CORBA_ExceptionCode374,16092
  MAESTRO_CORBA_EXCEPTION_CODE_UNKNOWN             = 10000,MAESTRO_CORBA_EXCEPTION_CODE_UNKNOWN375,16127
  MAESTRO_CORBA_EXCEPTION_CODE_BAD_PARAM           = 10020,MAESTRO_CORBA_EXCEPTION_CODE_BAD_PARAM376,16187
  MAESTRO_CORBA_EXCEPTION_CODE_NO_MEMORY           = 10040,MAESTRO_CORBA_EXCEPTION_CODE_NO_MEMORY377,16247
  MAESTRO_CORBA_EXCEPTION_CODE_IMP_LIMIT           = 10060,MAESTRO_CORBA_EXCEPTION_CODE_IMP_LIMIT378,16307
  MAESTRO_CORBA_EXCEPTION_CODE_COMM_FAILURE        = 10080,MAESTRO_CORBA_EXCEPTION_CODE_COMM_FAILURE379,16367
  MAESTRO_CORBA_EXCEPTION_CODE_INV_OBJREF          = 10100,MAESTRO_CORBA_EXCEPTION_CODE_INV_OBJREF380,16427
  MAESTRO_CORBA_EXCEPTION_CODE_NO_PERMISSION       = 10120,MAESTRO_CORBA_EXCEPTION_CODE_NO_PERMISSION381,16487
  MAESTRO_CORBA_EXCEPTION_CODE_INTERNAL            = 10140,MAESTRO_CORBA_EXCEPTION_CODE_INTERNAL382,16547
  MAESTRO_CORBA_EXCEPTION_CODE_MARSHAL             = 10160,MAESTRO_CORBA_EXCEPTION_CODE_MARSHAL383,16607
  MAESTRO_CORBA_EXCEPTION_CODE_INITIALIZE          = 10180,MAESTRO_CORBA_EXCEPTION_CODE_INITIALIZE384,16667
  MAESTRO_CORBA_EXCEPTION_CODE_NO_IMPLEMENT        = 10200,MAESTRO_CORBA_EXCEPTION_CODE_NO_IMPLEMENT385,16727
  MAESTRO_CORBA_EXCEPTION_CODE_BAD_TYPECODE        = 10220,MAESTRO_CORBA_EXCEPTION_CODE_BAD_TYPECODE386,16787
  MAESTRO_CORBA_EXCEPTION_CODE_BAD_OPERATION       = 10240,MAESTRO_CORBA_EXCEPTION_CODE_BAD_OPERATION387,16847
  MAESTRO_CORBA_EXCEPTION_CODE_NO_RESOURCES        = 10260,MAESTRO_CORBA_EXCEPTION_CODE_NO_RESOURCES388,16907
  MAESTRO_CORBA_EXCEPTION_CODE_NO_RESPONSE         = 10280,MAESTRO_CORBA_EXCEPTION_CODE_NO_RESPONSE389,16967
  MAESTRO_CORBA_EXCEPTION_CODE_PERSIST_STORE       = 10300,MAESTRO_CORBA_EXCEPTION_CODE_PERSIST_STORE390,17027
  MAESTRO_CORBA_EXCEPTION_CODE_BAD_INV_ORDER       = 10320,MAESTRO_CORBA_EXCEPTION_CODE_BAD_INV_ORDER391,17087
  MAESTRO_CORBA_EXCEPTION_CODE_TRANSIENT           = 10340,MAESTRO_CORBA_EXCEPTION_CODE_TRANSIENT392,17147
  MAESTRO_CORBA_EXCEPTION_CODE_FREE_MEM            = 10360,MAESTRO_CORBA_EXCEPTION_CODE_FREE_MEM393,17207
  MAESTRO_CORBA_EXCEPTION_CODE_INV_IDENT           = 10380,MAESTRO_CORBA_EXCEPTION_CODE_INV_IDENT394,17267
  MAESTRO_CORBA_EXCEPTION_CODE_INV_FLAG            = 10400,MAESTRO_CORBA_EXCEPTION_CODE_INV_FLAG395,17327
  MAESTRO_CORBA_EXCEPTION_CODE_INTF_REPOS          = 10420,MAESTRO_CORBA_EXCEPTION_CODE_INTF_REPOS396,17387
  MAESTRO_CORBA_EXCEPTION_CODE_BAD_CONTEXT         = 10440,MAESTRO_CORBA_EXCEPTION_CODE_BAD_CONTEXT397,17447
  MAESTRO_CORBA_EXCEPTION_CODE_OBJ_ADAPTOR         = 10460,MAESTRO_CORBA_EXCEPTION_CODE_OBJ_ADAPTOR398,17507
  MAESTRO_CORBA_EXCEPTION_CODE_DATA_CONVERSION     = 10480MAESTRO_CORBA_EXCEPTION_CODE_DATA_CONVERSION399,17567
enum Maestro_CORBA_CompletionStatus { Maestro_CORBA_CompletionStatus402,17630
  MAESTRO_CORBA_COMPLETION_STATUS_YES, MAESTRO_CORBA_COMPLETION_STATUS_YES403,17669
  MAESTRO_CORBA_COMPLETION_STATUS_NO, MAESTRO_CORBA_COMPLETION_STATUS_NO404,17709
  MAESTRO_CORBA_COMPLETION_STATUS_MAYBEMAESTRO_CORBA_COMPLETION_STATUS_MAYBE405,17748
struct Maestro_CORBA_Exception: virtual public Maestro_CORBA_Serializable {Maestro_CORBA_Exception408,17793
  Maestro_CORBA_String _name;_name417,18144
  Maestro_CORBA_ExceptionCode _minor_code;_minor_code418,18174
  Maestro_CORBA_CompletionStatus _status;_status419,18217

./corba/Maestro_ETC.C,291
Maestro_Etc::install(Maestro_String &name,install15,338
Maestro_Etc::install(Maestro_String &name,install25,549
Maestro_Etc::lookup(Maestro_String &name, lookup47,1101
Maestro_Etc::lookup(Maestro_String &name, lookup57,1312
Maestro_Etc Maestro_DefaultEtc;Maestro_DefaultEtc84,2010

./corba/Maestro_ETC.h,155
#define __MAESTRO_ETC_H____MAESTRO_ETC_H__8,209
const char* const MAESTRO_ETC = "MAESTRO_ETC";MAESTRO_ETC17,381
class Maestro_Etc: Maestro_Etc21,572

./corba/Maestro_GIOP.C,4064
Maestro_IOP_TaggedProfile::Maestro_IOP_TaggedProfile() {Maestro_IOP_TaggedProfile13,317
Maestro_IOP_TaggedProfile::Maestro_IOP_TaggedProfile(Maestro_IOP_TaggedProfile17,415
Maestro_IOP_TaggedProfile::Maestro_IOP_TaggedProfile(Maestro_IOP_TaggedProfile25,609
Maestro_IOP_TaggedProfile::operator>> (Maestro_CORBA_Message &msg) {operator >>34,824
Maestro_IOP_TaggedProfile::operator<< (Maestro_CORBA_Message &msg) {operator <<41,978
Maestro_IOP_IOR::Maestro_IOP_IOR(Maestro_IOP_IOR49,1152
Maestro_IOP_IOR::operator>> (Maestro_CORBA_Message &msg) {operator >>59,1363
Maestro_IOP_IOR::operator<< (Maestro_CORBA_Message &msg) {operator <<66,1509
Maestro_IOP_IOR::operator>> (Maestro_CORBA_String &repr) {operator >>73,1678
Maestro_IOP_IOR::operator<< (Maestro_CORBA_String &repr) {operator <<94,2225
Maestro_IOP_ServiceContext::Maestro_IOP_ServiceContext(Maestro_IOP_ServiceContext118,2868
Maestro_IOP_ServiceContext::Maestro_IOP_ServiceContext(Maestro_IOP_ServiceContext125,3032
Maestro_IOP_ServiceContext::operator>> (Maestro_CORBA_Message &msg) {operator >>134,3239
Maestro_IOP_ServiceContext::operator<< (Maestro_CORBA_Message &msg) {operator <<140,3364
Maestro_GIOP_Version::Maestro_GIOP_Version() {Maestro_GIOP_Version149,3551
Maestro_GIOP_Version::Maestro_GIOP_Version(Maestro_GIOP_Version154,3661
Maestro_GIOP_Version::operator>> (Maestro_CORBA_Message &msg) {operator >>163,3803
Maestro_GIOP_Version::operator<< (Maestro_CORBA_Message &msg) {operator <<169,3908
Maestro_GIOP_MessageHeader::Maestro_GIOP_MessageHeader() {Maestro_GIOP_MessageHeader177,4083
Maestro_GIOP_MessageHeader::Maestro_GIOP_MessageHeader(Maestro_GIOP_MessageHeader182,4241
Maestro_GIOP_MessageHeader::operator>> (Maestro_CORBA_Message &msg) {operator >>194,4573
Maestro_GIOP_MessageHeader::operator<< (Maestro_CORBA_Message &msg) {operator <<205,4822
Maestro_GIOP_RequestHeader::Maestro_GIOP_RequestHeader(Maestro_GIOP_RequestHeader219,5136
Maestro_GIOP_RequestHeader::operator>> (Maestro_CORBA_Message &msg) {operator >>232,5488
Maestro_GIOP_RequestHeader::operator<< (Maestro_CORBA_Message &msg) {operator <<242,5714
Maestro_GIOP_ReplyHeader::Maestro_GIOP_ReplyHeader(Maestro_GIOP_ReplyHeader254,6007
Maestro_GIOP_ReplyHeader::operator>> (Maestro_CORBA_Message &msg) {operator >>263,6208
Maestro_GIOP_ReplyHeader::operator<< (Maestro_CORBA_Message &msg) {operator <<270,6377
Maestro_GIOP_CancelRequestHeader::Maestro_GIOP_CancelRequestHeader(Maestro_GIOP_CancelRequestHeader281,6669
Maestro_GIOP_CancelRequestHeader::operator>> (Maestro_CORBA_Message &msg) {operator >>288,6814
Maestro_GIOP_CancelRequestHeader::operator<< (Maestro_CORBA_Message &msg) {operator <<293,6920
Maestro_GIOP_LocateRequestHeader::Maestro_GIOP_LocateRequestHeader(Maestro_GIOP_LocateRequestHeader300,7098
Maestro_GIOP_LocateRequestHeader::operator>> (Maestro_CORBA_Message &msg) {operator >>310,7309
Maestro_GIOP_LocateRequestHeader::operator<< (Maestro_CORBA_Message &msg) {operator <<316,7435
Maestro_GIOP_LocateReplyHeader::Maestro_GIOP_LocateReplyHeader(Maestro_GIOP_LocateReplyHeader324,7628
Maestro_GIOP_LocateReplyHeader::operator>> (Maestro_CORBA_Message &msg) {operator >>333,7844
Maestro_GIOP_LocateReplyHeader::operator<< (Maestro_CORBA_Message &msg) {operator <<339,7994
Maestro_IIOP_ProfileBody::Maestro_IIOP_ProfileBody() {Maestro_IIOP_ProfileBody349,8265
Maestro_IIOP_ProfileBody::Maestro_IIOP_ProfileBody(Maestro_IIOP_ProfileBody354,8409
Maestro_IIOP_ProfileBody::operator>> (Maestro_CORBA_Message &msg) {operator >>367,8741
Maestro_IIOP_ProfileBody::operator<< (Maestro_CORBA_Message &msg) {operator <<375,8892
Maestro_IIOP_TaggedProfile::Maestro_IIOP_TaggedProfile(Maestro_IIOP_TaggedProfile382,9037
Maestro_IIOP_TaggedProfile::Maestro_IIOP_TaggedProfile(Maestro_IIOP_TaggedProfile389,9210
Maestro_IIOP_TaggedProfile::Maestro_IIOP_TaggedProfile(Maestro_IIOP_TaggedProfile399,9518
Maestro_IIOP_IOR::Maestro_IIOP_IOR(Maestro_IIOP_IOR411,9900
Maestro_IIOP_IOR::Maestro_IIOP_IOR(Maestro_IIOP_IOR423,10238

./corba/Maestro_GIOP.h,5854
#define __MAESTRO_GIOP_H____MAESTRO_GIOP_H__8,221
typedef Maestro_CORBA_ULong Maestro_IOP_ProfileId;Maestro_IOP_ProfileId16,368
const Maestro_IOP_ProfileId MAESTRO_IOP_TAG_INTERNET_IOP = 0;MAESTRO_IOP_TAG_INTERNET_IOP18,420
struct Maestro_IOP_TaggedProfile:Maestro_IOP_TaggedProfile23,558
  Maestro_IOP_ProfileId tag;tag39,1056
  Maestro_CORBA_OctetSequence profile_data;profile_data40,1085
typedef Maestro_CORBA_Sequence(Maestro_IOP_TaggedProfile)Maestro_CORBA_Sequence44,1134
const char* const MAESTRO_IOP_IOR_PREFIX = "IOR:";MAESTRO_IOP_IOR_PREFIX47,1226
struct Maestro_IOP_IOR:Maestro_IOP_IOR52,1343
  Maestro_IOP_IOR() {}Maestro_IOP_IOR55,1413
  Maestro_CORBA_String type_id;type_id71,1979
  Maestro_IOP_TaggedProfileList profiles;profiles72,2011
typedef Maestro_CORBA_ULong Maestro_IOP_ServiceID;Maestro_IOP_ServiceID75,2057
struct Maestro_IOP_ServiceContext: Maestro_IOP_ServiceContext80,2184
  Maestro_IOP_ServiceContext() {}Maestro_IOP_ServiceContext83,2267
  Maestro_IOP_ServiceID context_id;context_id91,2591
  Maestro_CORBA_OctetSequence context_data;context_data92,2627
typedef Maestro_CORBA_Sequence(Maestro_IOP_ServiceContext)Maestro_CORBA_Sequence95,2675
  MAESTRO_GIOP_MSG_TYPE_REQUEST,MAESTRO_GIOP_MSG_TYPE_REQUEST102,2858
  MAESTRO_GIOP_MSG_TYPE_REPLY,MAESTRO_GIOP_MSG_TYPE_REPLY103,2891
  MAESTRO_GIOP_MSG_TYPE_CANCEL_REQUEST,MAESTRO_GIOP_MSG_TYPE_CANCEL_REQUEST104,2922
  MAESTRO_GIOP_MSG_TYPE_LOCATE_REQUEST,MAESTRO_GIOP_MSG_TYPE_LOCATE_REQUEST105,2962
  MAESTRO_GIOP_MSG_TYPE_LOCATE_REPLY,MAESTRO_GIOP_MSG_TYPE_LOCATE_REPLY106,3002
  MAESTRO_GIOP_MSG_TYPE_CLOSE_CONNECTION,MAESTRO_GIOP_MSG_TYPE_CLOSE_CONNECTION107,3040
  MAESTRO_GIOP_MSG_TYPE_MESSAGE_ERRORMAESTRO_GIOP_MSG_TYPE_MESSAGE_ERROR108,3082
} Maestro_GIOP_MsgType;Maestro_GIOP_MsgType109,3120
const Maestro_CORBA_Char* const MAESTRO_GIOP_MAGIC = (unsigned char*) "GIOP";MAESTRO_GIOP_MAGIC111,3145
const Maestro_CORBA_Char MAESTRO_GIOP_MAJOR = 1;MAESTRO_GIOP_MAJOR113,3224
const Maestro_CORBA_Char MAESTRO_GIOP_MINOR = 0;MAESTRO_GIOP_MINOR114,3273
struct Maestro_GIOP_Version:Maestro_GIOP_Version119,3392
  Maestro_CORBA_Char major;major128,3681
  Maestro_CORBA_Char minor;minor129,3709
struct Maestro_GIOP_MessageHeader: Maestro_GIOP_MessageHeader135,3817
  Maestro_CORBA_Char magic[4];magic149,4242
  Maestro_GIOP_Version GIOP_version;GIOP_version150,4273
  Maestro_CORBA_Boolean byte_order;byte_order151,4310
  Maestro_CORBA_Octet message_type;message_type152,4346
  Maestro_CORBA_ULong message_size;message_size153,4382
typedef Maestro_CORBA_OctetSequence Maestro_GIOP_Principal;Maestro_GIOP_Principal156,4422
struct Maestro_GIOP_RequestHeader: Maestro_GIOP_RequestHeader161,4559
  Maestro_GIOP_RequestHeader() {}Maestro_GIOP_RequestHeader164,4642
  Maestro_IOP_ServiceContextList service_context;service_context174,4994
  Maestro_CORBA_ULong            request_id;request_id175,5044
  Maestro_CORBA_Boolean          response_expected;response_expected176,5089
  Maestro_CORBA_OctetSequence    object_key;object_key177,5141
  Maestro_CORBA_String           operation;operation178,5186
  Maestro_GIOP_Principal         requesting_principal;requesting_principal179,5230
  MAESTRO_GIOP_REPLY_STATUS_NO_EXCEPTION,MAESTRO_GIOP_REPLY_STATUS_NO_EXCEPTION183,5304
  MAESTRO_GIOP_REPLY_STATUS_USER_EXCEPTION,MAESTRO_GIOP_REPLY_STATUS_USER_EXCEPTION184,5346
  MAESTRO_GIOP_REPLY_STATUS_SYSTEM_EXCEPTION,MAESTRO_GIOP_REPLY_STATUS_SYSTEM_EXCEPTION185,5390
  MAESTRO_GIOP_REPLY_STATUS_LOCATION_FORWARDMAESTRO_GIOP_REPLY_STATUS_LOCATION_FORWARD186,5436
} Maestro_GIOP_ReplyStatusType;Maestro_GIOP_ReplyStatusType187,5481
struct Maestro_GIOP_ReplyHeader: Maestro_GIOP_ReplyHeader192,5587
  Maestro_GIOP_ReplyHeader() {}Maestro_GIOP_ReplyHeader195,5668
  Maestro_IOP_ServiceContextList service_context;service_context203,5923
  Maestro_CORBA_ULong            request_id;request_id204,5973
  Maestro_GIOP_ReplyStatusType   reply_status;reply_status205,6018
struct Maestro_GIOP_CancelRequestHeader:Maestro_GIOP_CancelRequestHeader211,6151
  Maestro_CORBA_ULong            request_id;request_id219,6427
struct Maestro_GIOP_LocateRequestHeader:Maestro_GIOP_LocateRequestHeader225,6555
  Maestro_GIOP_LocateRequestHeader() {}Maestro_GIOP_LocateRequestHeader228,6643
  Maestro_CORBA_ULong            request_id;request_id235,6913
  Maestro_CORBA_OctetSequence    object_key;object_key236,6958
  MAESTRO_GIOP_LOCATE_STATUS_UNKNOWN_OBJECT,MAESTRO_GIOP_LOCATE_STATUS_UNKNOWN_OBJECT240,7022
  MAESTRO_GIOP_LOCATE_STATUS_OBJECT_HERE,MAESTRO_GIOP_LOCATE_STATUS_OBJECT_HERE241,7067
  MAESTRO_GIOP_LOCATE_STATUS_OBJECT_FORWARDMAESTRO_GIOP_LOCATE_STATUS_OBJECT_FORWARD242,7109
} Maestro_GIOP_LocateStatusType;Maestro_GIOP_LocateStatusType243,7153
struct Maestro_GIOP_LocateReplyHeader:Maestro_GIOP_LocateReplyHeader248,7259
  Maestro_GIOP_LocateReplyHeader() {}Maestro_GIOP_LocateReplyHeader251,7345
  Maestro_CORBA_ULong            request_id;request_id258,7613
  Maestro_GIOP_LocateStatusType  locate_status;locate_status259,7658
const Maestro_CORBA_Char MAESTRO_IIOP_MAJOR = 1;MAESTRO_IIOP_MAJOR265,7784
const Maestro_CORBA_Char MAESTRO_IIOP_MINOR = 0;MAESTRO_IIOP_MINOR266,7833
struct Maestro_IIOP_ProfileBody:Maestro_IIOP_ProfileBody271,7960
  Maestro_GIOP_Version iiop_version;iiop_version282,8333
  Maestro_CORBA_String host;host283,8370
  Maestro_CORBA_UShort port;port284,8399
  Maestro_CORBA_OctetSequence object_key;object_key285,8428
struct Maestro_IIOP_TaggedProfile:Maestro_IIOP_TaggedProfile288,8474
  Maestro_IIOP_TaggedProfile() { tag = MAESTRO_IOP_TAG_INTERNET_IOP; }Maestro_IIOP_TaggedProfile292,8542
struct Maestro_IIOP_IOR: Maestro_IOP_IOR {Maestro_IIOP_IOR306,8987
  Maestro_IIOP_IOR() {}Maestro_IIOP_IOR307,9030

./corba/Maestro_IIOPBridge.C,3457
Maestro_IIOP_BridgeBase::Maestro_IIOP_BridgeBase() {Maestro_IIOP_BridgeBase13,378
Maestro_IIOP_ConnRef::Maestro_IIOP_ConnRef(Maestro_IIOP_ConnRef21,588
Maestro_IIOP_ConnRef::Maestro_IIOP_ConnRef(Maestro_IIOP_ConnRef &cr) {Maestro_IIOP_ConnRef29,754
Maestro_IIOP_ConnRefList::closeAll() {closeAll39,985
Maestro_IIOP_ConnRefList::add(Maestro_IIOP_Connection *conn) {add51,1209
Maestro_IIOP_ConnRefList::remove(Maestro_IIOP_Connection *conn) {remove60,1427
Maestro_IIOP_ConnRefList::ref(Maestro_IIOP_ConnId cid) {ref70,1765
Maestro_IIOP_Connection::Maestro_IIOP_Connection(Maestro_IIOP_Connection88,2162
Maestro_IIOP_Connection::~Maestro_IIOP_Connection() {~Maestro_IIOP_Connection103,2464
Maestro_IIOP_Connection::close() {close120,2868
Maestro_IIOP_Connection::acquireWriteMutex() {acquireWriteMutex135,3190
Maestro_IIOP_Connection::releaseWriteMutex() {releaseWriteMutex141,3295
Maestro_IIOP_Connection::ref() {ref148,3433
Maestro_IIOP_Connection::unref() {unref159,3648
Maestro_IIOP_Connection::write(void *buf, unsigned nbytes) {write178,4069
Maestro_IIOP_Connection::dispatcher(void *arg) {dispatcher205,4731
Maestro_IIOP_Reply::Maestro_IIOP_Reply(Maestro_IIOP_Reply257,6135
Maestro_IIOP_Client::Maestro_IIOP_Client(Maestro_IIOP_Client268,6358
Maestro_IIOP_Client::~Maestro_IIOP_Client() {~Maestro_IIOP_Client291,6878
Maestro_IIOP_Client::request(request308,7154
Maestro_IIOP_Client::locateRequest(locateRequest360,8609
Maestro_IIOP_Client::cancelRequest(Maestro_CORBA_ULong request_id) {cancelRequest392,9501
Maestro_IIOP_Client::ref() {ref421,10401
Maestro_IIOP_Client::unref() {unref430,10594
Maestro_IIOP_Client::connect(char *host, unsigned short port) {connect442,10814
Maestro_IIOP_Client::handleIncoming() {handleIncoming490,11988
Maestro_IIOP_Client::dispatcher_Thread(void *arg) {dispatcher_Thread605,15956
Maestro_IIOP_Client::reply_Thread(void *arg) {reply_Thread655,17306
Maestro_IIOP_Client::locateReply_Thread(void *arg) {locateReply_Thread669,17716
Maestro_IIOP_Client::messageError_Thread(void *arg) {messageError_Thread680,18090
Maestro_IIOP_Client::closeConnection_Thread(void *arg) {closeConnection_Thread690,18438
Maestro_IIOP_Request::Maestro_IIOP_Request(Maestro_IIOP_Request701,18814
Maestro_IIOP_Server::Maestro_IIOP_Server(unsigned short port) {Maestro_IIOP_Server715,19083
Maestro_IIOP_Server::~Maestro_IIOP_Server() {~Maestro_IIOP_Server739,19748
Maestro_IIOP_Server::closeConnection(Maestro_IIOP_ConnId cid) {closeConnection768,20379
Maestro_IIOP_Server::requestReply(requestReply780,20703
Maestro_IIOP_Server::locateReply(locateReply843,22398
Maestro_IIOP_Server::acceptConnections(unsigned short port) {acceptConnections882,23642
Maestro_IIOP_Server::ref() {ref910,24418
Maestro_IIOP_Server::unref() {unref919,24611
Maestro_IIOP_Server::connectionClosed(Maestro_IIOP_Connection *conn) {connectionClosed928,24728
Maestro_IIOP_Server::dispatchIncoming(Maestro_IIOP_Connection *conn) {dispatchIncoming935,24878
Maestro_IIOP_Server::connectionListener_Thread(void *arg) {connectionListener_Thread1119,30499
Maestro_IIOP_Server::request_Thread(void *arg) {request_Thread1189,32344
Maestro_IIOP_Server::cancelRequest_Thread(void *arg) {cancelRequest_Thread1211,32978
Maestro_IIOP_Server::locateRequest_Thread(void *arg) {locateRequest_Thread1222,33355
Maestro_IIOP_Server::messageError_Thread(void *arg) {messageError_Thread1234,33759

./corba/Maestro_IIOPBridge.h,4735
#define __MAESTRO_IIOPBRIDGE_H____MAESTRO_IIOPBRIDGE_H__8,250
const unsigned MASTRO_SELECT_TV_SEC = 0;MASTRO_SELECT_TV_SEC18,463
const unsigned MASTRO_SELECT_TV_USEC = 500000;MASTRO_SELECT_TV_USEC19,504
class Maestro_IIOP_BridgeBase:Maestro_IIOP_BridgeBase21,552
  unsigned msgHdrSize;		// size of GIOP message header.msgHdrSize27,664
typedef Maestro_ULong Maestro_IIOP_ConnId;Maestro_IIOP_ConnId33,783
class Maestro_IIOP_ConnRef: Maestro_IIOP_ConnRef38,908
  Maestro_IIOP_ConnRef() {}Maestro_IIOP_ConnRef43,978
  int operator== (Maestro_IIOP_ConnRef &cr) { return (_cid == cr._cid); }operator ==48,1150
  Maestro_IIOP_ConnId id() { return _cid; }id49,1224
  Maestro_IIOP_Connection *conn() { return _conn; }conn50,1268
  Maestro_IIOP_ConnId _cid;_cid54,1333
  Maestro_IIOP_Connection *_conn;_conn55,1361
typedef Maestro_OrderedSet(Maestro_IIOP_ConnRef) Maestro_OrderedSet58,1399
class Maestro_IIOP_ConnRefList {Maestro_IIOP_ConnRefList65,1623
  Maestro_IIOP_ConnRefList() {}Maestro_IIOP_ConnRefList68,1665
  ~Maestro_IIOP_ConnRefList() { closeAll(); }~Maestro_IIOP_ConnRefList69,1697
  Maestro_IIOP_ConnRefList_Base active;active86,2196
  Maestro_Lock mutex;mutex87,2236
class Maestro_IIOP_Connection: Maestro_IIOP_Connection93,2342
  virtual void start() { Maestro_Thread::create(dispatcher, this); }start107,2626
  int fd() { return _fd; }fd124,3088
  Maestro_IIOP_ConnId id() { return connId; }id125,3115
  static const unsigned MAGIC = 0x34983208;MAGIC132,3259
  unsigned magic;magic139,3416
  int write_mutex_acquired;write_mutex_acquired140,3434
  unsigned refcnt;refcnt141,3462
  int isOpen;isOpen142,3481
  Maestro_IIOP_Server *srv;srv143,3495
  int _fd;_fd144,3523
  Maestro_ULong connId;connId145,3534
  Maestro_Lock mutex, writeMutex;mutex146,3558
  Maestro_Lock mutex, writeMutex;writeMutex146,3558
  int inside;inside147,3592
struct Maestro_IIOP_Reply {Maestro_IIOP_Reply155,3717
  Maestro_GIOP_MsgType type;type159,3834
  Maestro_IIOP_Client *client;client160,3863
  Maestro_CORBA_ULong request_id;request_id161,3894
  Maestro_GIOP_ReplyStatusType reply_status;reply_status162,3928
  Maestro_GIOP_LocateStatusType locate_status;locate_status163,3973
  Maestro_CORBA_Message msg;msg164,4020
  void *data;data165,4049
class Maestro_IIOP_Client: Maestro_IIOP_Client171,4147
  virtual void reply_Callback(Maestro_CORBA_ULong request_id, reply_Callback200,5094
  virtual void locateReply_Callback(locateReply_Callback204,5250
  virtual void closeConnection_Callback() {}closeConnection_Callback208,5382
  virtual void messageError_Callback() {}messageError_Callback209,5427
  static const unsigned MAGIC = 0x90289723;MAGIC221,5808
  Maestro_Lock mutex, writeMutex;mutex247,6502
  Maestro_Lock mutex, writeMutex;writeMutex247,6502
  Maestro_Semaphore sema;sema248,6536
  int closed;closed249,6562
  int refcnt;refcnt250,6576
  int serverFd;serverFd251,6590
  unsigned magic;magic252,6606
  enum { ON, OFF } state;ON253,6624
  enum { ON, OFF } state;OFF253,6624
  enum { ON, OFF } state;state253,6624
  Maestro_CORBA_ULong requestId;requestId254,6650
struct Maestro_IIOP_Request {Maestro_IIOP_Request260,6767
  Maestro_GIOP_MsgType type;type265,6922
  Maestro_IIOP_Server *server;server266,6951
  Maestro_IIOP_ConnId cid;cid267,6982
  Maestro_CORBA_ULong request_id;request_id268,7009
  Maestro_CORBA_Boolean response_expected;response_expected269,7043
  Maestro_CORBA_OctetSequence object_key;object_key270,7086
  Maestro_CORBA_String operation;operation271,7128
  Maestro_CORBA_Message msg;msg272,7162
  Maestro_GIOP_Principal requesting_principal;requesting_principal273,7191
  void *data;data274,7238
class Maestro_IIOP_Server: Maestro_IIOP_Server280,7336
  virtual unsigned short port() { return _port; }port291,7583
  virtual void request_Callback(request_Callback313,8279
  virtual void locateRequest_Callback(locateRequest_Callback322,8591
  virtual void cancelRequest_Callback(cancelRequest_Callback327,8752
  virtual void messageError_Callback(Maestro_IIOP_ConnId cid) {}messageError_Callback331,8866
  static const unsigned MAGIC = 0x98734846;MAGIC347,9376
  unsigned short _port;_port349,9421
  int refcnt;refcnt377,10218
  unsigned magic;magic378,10232
  int listenFd;			// server listens for connections on this fd.listenFd379,10250
  int closed;closed380,10314
  Maestro_Semaphore sema;sema381,10328
  Maestro_Lock mutex;mutex382,10354
  Maestro_IIOP_ConnRefList *active; // list of active connections.active383,10376
  int isClosed;			// set to 1 if server is being deleted.isClosed384,10443
  Maestro_IIOP_ConnId connId;connId385,10501

./corba/Maestro_ORB.C,2452
const char *Maestro_ORB_ObjectKey::MAGIC = "MAE:";MAGIC12,311
Maestro_ORB_ObjectKey::init(char *appName) {init17,425
Maestro_ORB_ObjectKey::Maestro_ORB_ObjectKey(Maestro_ORB_ObjectKey60,1453
Maestro_ORB_ObjectKey::operator= (Maestro_ORB_ObjectKey &objKey) { operator =67,1596
Maestro_ORB_ObjectKey::isValid() { isValid73,1709
Maestro_ORB_ObjectKey::hash() {hash96,2236
Maestro_ORB_ObjectKey::appName() {appName112,2451
Maestro_ORB_RequestId::Maestro_ORB_RequestId(Maestro_ORB_RequestId124,2702
Maestro_ORB_RequestId::Maestro_ORB_RequestId(Maestro_ORB_RequestId &reqId) {Maestro_ORB_RequestId132,2863
Maestro_ORB_RequestId::operator= (Maestro_ORB_RequestId &reqId) {operator =138,3020
Maestro_ORB_RequestId::operator== (Maestro_ORB_RequestId &reqId) {operator ==145,3163
Maestro_ORB_ObjectBinding::Maestro_ORB_ObjectBinding(Maestro_ORB_ObjectBinding152,3368
Maestro_ORB_DispatcherBase::Maestro_ORB_DispatcherBase(unsigned hashSize_) {Maestro_ORB_DispatcherBase161,3574
Maestro_ORB_DispatcherBase::~Maestro_ORB_DispatcherBase() { ~Maestro_ORB_DispatcherBase166,3736
Maestro_ORB_DispatcherBase::bind(bind174,3926
Maestro_ORB_DispatcherBase::unbind(Maestro_ORB_ObjectKey &objKey) {unbind196,4486
Maestro_ORB_DispatcherBase::lookup(Maestro_ORB_ObjectKey &objKey) {lookup211,4856
Maestro_ORB_IIOPDispatcher::requestReply(requestReply236,5461
Maestro_ORB_IIOPDispatcher::locateReply(locateReply248,5772
Maestro_ORB_IIOPDispatcher::request_Callback(request_Callback258,6012
Maestro_ORB_IIOPDispatcher::locateRequest_Callback(locateRequest_Callback281,6634
Maestro_Conf_Item::Maestro_Conf_Item(Maestro_Conf_Item296,7084
operator << (ostream &out, Maestro_Conf_Item &item) {operator <<304,7214
operator << (ostream &out, Maestro_Conf_Argument &arg) {operator <<310,7353
operator >> (istream &sdl, Maestro_Conf_Argument &arg) {operator >>319,7609
Maestro_Conf_Argument::reset(Maestro_String &_type, Maestro_String &_name) { reset324,7697
Maestro_Conf_Argument::add(Maestro_String &key, Maestro_String &val) {add332,7846
Maestro_Conf_Argument::operator << (istream &sdl) {operator <<341,8083
Maestro_Conf::operator << (istream &sdl) {operator <<420,9708
Maestro_Conf::generateCode(ostream &out, char *prefix, char *confVar) {generateCode489,11369
operator << (ostream &out, Maestro_Conf &intf) {operator <<506,12001
operator >> (istream &sdl, Maestro_Conf &intf) { intf << sdl; }operator >>515,12232

./corba/Maestro_ORB.h,4423
#define __MAESTRO_ORB_H____MAESTRO_ORB_H__8,221
class Maestro_ORB_ObjectKey:Maestro_ORB_ObjectKey19,476
  Maestro_ORB_ObjectKey() {}Maestro_ORB_ObjectKey25,591
  Maestro_ORB_ObjectKey(Maestro_ORB_ObjectKey &objKey) { key = objKey.key; }Maestro_ORB_ObjectKey26,620
  Maestro_ORB_ObjectKey(Maestro_CORBA_String &obj_key) { key = obj_key; }Maestro_ORB_ObjectKey27,697
  int operator== (Maestro_ORB_ObjectKey &objKey) { return (key == objKey.key); }operator ==31,903
  virtual void operator>> (Maestro_CORBA_String &str) { str = key; }operator >>36,1075
  void operator>> (Maestro_CORBA_Message &msg) { msg << key; }operator >>37,1144
  void operator<< (Maestro_CORBA_Message &msg) { msg >> key; }operator <<38,1207
  void operator>> (Maestro_Message &msg) { msg << key; }operator >>39,1270
  void operator<< (Maestro_Message &msg) { msg >> key; }operator <<40,1327
  static const char *MAGIC;MAGIC62,1700
  Maestro_CORBA_String key;key63,1728
class Maestro_ORB_RequestId: Maestro_ORB_RequestId69,1828
  Maestro_ORB_RequestId() {}Maestro_ORB_RequestId75,1948
  Maestro_CORBA_ULong reqId() { return request_id; }reqId83,2238
  Maestro_IIOP_ConnId connId() { return cid; }connId84,2291
  void operator<< (Maestro_CORBA_Message &msg) { msg >> cid >> request_id; }operator <<86,2339
  void operator>> (Maestro_CORBA_Message &msg) { msg << cid << request_id; }operator >>87,2416
    void operator<< (Maestro_Message &msg) { msg >> cid >> request_id; }operator <<88,2493
    void operator>> (Maestro_Message &msg) { msg << request_id << cid; }operator >>89,2566
  Maestro_CORBA_ULong request_id;request_id93,2652
  Maestro_IIOP_ConnId cid;cid94,2686
class Maestro_ORB_Base {Maestro_ORB_Base101,2839
  virtual void request_Callback(request_Callback105,2932
  virtual void locateRequest_Callback(locateRequest_Callback113,3196
  virtual void cancelRequest_Callback(Maestro_ORB_RequestId &reqId) {}cancelRequest_Callback117,3308
struct Maestro_ORB_ObjectBinding:Maestro_ORB_ObjectBinding126,3604
  Maestro_ORB_ObjectBinding() {}Maestro_ORB_ObjectBinding129,3670
  Maestro_ORB_ObjectBinding(Maestro_ORB_ObjectBinding132,3765
  int operator==(Maestro_ORB_ObjectBinding &bnd) { return (obj == bnd.obj); }operator ==136,3889
  Maestro_ORB_ObjectKey obj; obj138,3968
  Maestro_ORB_Base *orb;orb139,3998
typedef Maestro_OrderedSet(Maestro_ORB_ObjectBinding) Maestro_OrderedSet142,4027
const int MAESTRO_ORB_HASH_SIZE = 256;MAESTRO_ORB_HASH_SIZE148,4189
class Maestro_ORB_DispatcherBase {Maestro_ORB_DispatcherBase151,4299
  Maestro_Lock mutex;mutex175,5143
  Maestro_ORB_ObjectBindingList *bindings;bindings176,5165
  unsigned hashSize;hashSize177,5208
class Maestro_ORB_IIOPDispatcher: Maestro_ORB_IIOPDispatcher184,5374
  Maestro_ORB_IIOPDispatcher(unsigned short port = 0, Maestro_ORB_IIOPDispatcher190,5502
enum Maestro_Conf_Status {Maestro_Conf_Status221,6520
  MAESTRO_CONF_ARG_ST_OK, MAESTRO_CONF_ARG_ST_OK222,6547
  MAESTRO_CONF_ARG_ST_EOF, MAESTRO_CONF_ARG_ST_EOF223,6574
  MAESTRO_CONF_ARG_ST_SYS_ERR, MAESTRO_CONF_ARG_ST_SYS_ERR224,6602
  MAESTRO_CONF_ARG_ST_SYNTAX_ERRMAESTRO_CONF_ARG_ST_SYNTAX_ERR225,6634
struct Maestro_Conf_Item: Maestro_Base {Maestro_Conf_Item228,6671
  Maestro_String key;key229,6712
  Maestro_String val;val230,6734
  Maestro_Conf_Item() {}Maestro_Conf_Item232,6757
  int operator== (Maestro_Conf_Item &item) { return 0; }operator ==234,6847
typedef Maestro_OrderedSet(Maestro_Conf_Item) Maestro_Conf_ItemList;Maestro_OrderedSet239,6971
struct Maestro_Conf_Argument: Maestro_Base {Maestro_Conf_Argument241,7041
  Maestro_String type;type242,7086
  Maestro_String name;name243,7109
  Maestro_Conf_ItemList items;items244,7132
  Maestro_Conf_Argument() { valid = 0; }Maestro_Conf_Argument246,7164
  int operator== (Maestro_Conf_Argument &arg) { return 0; }operator ==250,7320
  int valid;valid252,7430
typedef Maestro_OrderedSet(Maestro_Conf_Argument) Maestro_Conf_ArgumentList;Maestro_OrderedSet259,7590
struct Maestro_Conf {Maestro_Conf261,7668
  Maestro_String name;name262,7690
  Maestro_Conf_ArgumentList arguments;arguments263,7713
  Maestro_Conf() { valid = 0; }Maestro_Conf265,7755
  Maestro_Conf(Maestro_String &_name) { valid = 0; name = _name; }Maestro_Conf266,7787
  void add(Maestro_Conf_Argument &arg) { arguments += arg; }add267,7854
  int valid;valid271,8015

./group/Maestro_Adaptor.h,1500
#define __MAESTRO_ADAPTOR_H____MAESTRO_ADAPTOR_H__17,758
class Maestro_AdaptorBase {Maestro_AdaptorBase28,1076
class Maestro_Communicator {Maestro_Communicator89,3127
  virtual void viewMsg_Callback(Maestro_CSX_ViewData &viewData, viewMsg_Callback92,3165
  virtual void acceptedView_Callback(Maestro_CSX_ViewData& viewData,acceptedView_Callback95,3274
  virtual void receiveCast_Callback(Maestro_EndpID &origin, receiveCast_Callback98,3380
  virtual void receiveScast_Callback(Maestro_EndpID &origin, receiveScast_Callback101,3478
  virtual void receiveSend_Callback(Maestro_EndpID &origin, receiveSend_Callback104,3577
  virtual void receiveLsend_Callback(Maestro_EndpID &origin, receiveLsend_Callback107,3675
  virtual void heartbeat_Callback(unsigned time) {}heartbeat_Callback110,3774
  virtual void block_Callback() {}block_Callback111,3826
  virtual void exit_Callback() {}exit_Callback112,3861
  virtual void askState_Callback(Maestro_EndpID &origin, askState_Callback114,3898
  virtual void stateTransfer_Callback(Maestro_XferID &xferID) {} stateTransfer_Callback118,4025
  virtual void gotState_Callback(Maestro_XferID &xferID,gotState_Callback120,4094
  virtual void xferCanceled_Callback(Maestro_XferID &xferID) {}xferCanceled_Callback123,4189
#define Maestro_Adaptor(Maestro_Adaptor130,4348
typedef Maestro_Adaptor(Prim, prim) Maestro_AdaptorPrim;Maestro_Adaptor329,18859
typedef Maestro_Adaptor(CSX, csx) Maestro_AdaptorCSX;Maestro_Adaptor330,18916

./group/Maestro_ClSv.C,2730
Maestro_ClSv::Maestro_ClSv(Maestro_ClSv_Options &ops)Maestro_ClSv21,1043
Maestro_ClSv::Maestro_ClSv(Maestro_ClSv& hclsv) : Maestro_GroupMember(hclsv) {Maestro_ClSv33,1464
Maestro_ClSv& Maestro_ClSv::operator= (Maestro_ClSv& hclsv) {operator =37,1610
Maestro_ClSv::join() {join43,1754
Maestro_ClSv::cast(Maestro_Message &msg) {cast55,2074
Maestro_ClSv::cast(Maestro_Message &msg, Maestro_MsgSendView &sendView) {cast61,2195
Maestro_ClSv::cast(Maestro_Message &msg, cast67,2357
Maestro_ClSv::send(Maestro_EndpID &dest, Maestro_Message &msg) {send82,2728
Maestro_ClSv::send(Maestro_EndpID &dest, send88,2877
Maestro_ClSv::send(Maestro_EndpID &dest, send96,3076
Maestro_ClSv::scast(Maestro_Message &msg) {scast113,3528
Maestro_ClSv::scast(Maestro_Message &msg, Maestro_MsgSendView &sendView) {scast119,3651
Maestro_ClSv::scast(Maestro_Message &msg, scast125,3815
Maestro_ClSv::lsend(Maestro_Message &msg, lsend140,4197
void gdb_stop (Maestro_GrpMemb_ViewData &vd1, gdb_stop157,4744
Maestro_ClSv::grpMemb_AcceptedView_Callback(Maestro_GrpMemb_ViewData &gmView,grpMemb_AcceptedView_Callback166,4985
Maestro_ClSv::grpMemb_ViewMsg_Callback(Maestro_GrpMemb_ViewData& viewData,grpMemb_ViewMsg_Callback374,10642
Maestro_ClSv::grpMemb_ViewStateInfo_Callback(Maestro_EndpID& origin, Maestro_GrpMemb_ViewData& viewData, grpMemb_ViewStateInfo_Callback401,11417
Maestro_ClSv::grpMemb_ProposeView_Callback(Maestro_GrpMemb_ViewData& viewData,grpMemb_ProposeView_Callback428,12192
Maestro_ClSv::grpMemb_ChangingView_Callback(Maestro_GrpMemb_ViewData &viewData,grpMemb_ChangingView_Callback444,12752
Maestro_ClSv::grpMemb_ReceiveCast_Callback(Maestro_EndpID &origin, grpMemb_ReceiveCast_Callback454,13096
Maestro_ClSv::grpMemb_ReceiveSend_Callback(Maestro_EndpID &origin, grpMemb_ReceiveSend_Callback499,14137
Maestro_ClSv::askState(Maestro_EndpID &server, Maestro_Message& msg) {askState544,15022
Maestro_ClSv::sendState(Maestro_EndpID &joiningServer, Maestro_Message &msg) {sendState554,15307
Maestro_ClSv::xferDone(Maestro_ClSv_ViewData& vd) {xferDone564,15627
Maestro_ClSv::becomeServer(Maestro_ClSv_ViewData& vd) {becomeServer595,16389
Maestro_ClSv::XFER_DONE(Maestro_ClSv_ViewData& vd,XFER_DONE630,17331
Maestro_ClSv::BECOME_SERVER(Maestro_ClSv_ViewData& vd,BECOME_SERVER647,17693
Maestro_ClSv::delayMsg(Maestro_Message& msg) {delayMsg667,18209
Maestro_ClSv::delayMsg(Maestro_EndpID& dest, Maestro_Message& msg) {delayMsg674,18335
Maestro_ClSv::sendDelayedMsgs() {sendDelayedMsgs682,18627
Maestro_ClSv_ViewData::Maestro_ClSv_ViewData(Maestro_GrpMemb_ViewData &gmView):Maestro_ClSv_ViewData708,19282
Maestro_ClSv_ViewData::Maestro_ClSv_ViewData() {Maestro_ClSv_ViewData738,20067

./group/Maestro_ClSv.h,7630
#define __MAESTRO_CLT_SVR_H____MAESTRO_CLT_SVR_H__4,133
  MAESTRO_CLSV_STATE_INITIAL,MAESTRO_CLSV_STATE_INITIAL164,6834
  MAESTRO_CLSV_STATE_JOINING,MAESTRO_CLSV_STATE_JOINING165,6864
  MAESTRO_CLSV_STATE_CLIENT_NORMAL,MAESTRO_CLSV_STATE_CLIENT_NORMAL166,6894
  MAESTRO_CLSV_STATE_BECOMING_SERVER,MAESTRO_CLSV_STATE_BECOMING_SERVER167,6930
  MAESTRO_CLSV_STATE_SERVER_XFER,MAESTRO_CLSV_STATE_SERVER_XFER168,6968
  MAESTRO_CLSV_STATE_SERVER_XFER_DONE,MAESTRO_CLSV_STATE_SERVER_XFER_DONE169,7002
  MAESTRO_CLSV_STATE_SERVER_NORMAL,MAESTRO_CLSV_STATE_SERVER_NORMAL170,7041
  MAESTRO_CLSV_STATE_LEAVINGMAESTRO_CLSV_STATE_LEAVING171,7077
} Maestro_ClSvState;Maestro_ClSvState172,7106
  MAESTRO_CLIENT,MAESTRO_CLIENT176,7166
  MAESTRO_SERVER MAESTRO_SERVER177,7184
} Maestro_MbrshipOption;Maestro_MbrshipOption178,7202
  MAESTRO_NO_XFER,         // normal view: all messages are allowed MAESTRO_NO_XFER182,7258
  MAESTRO_FREE_XFER,       // all messages are allowed MAESTRO_FREE_XFER183,7327
  MAESTRO_PROTECTED_XFER,  // only xfer & safe msgs allowed MAESTRO_PROTECTED_XFER184,7383
  MAESTRO_ATOMIC_XFER,     // only xfer messages are allowed MAESTRO_ATOMIC_XFER185,7444
} Maestro_ViewType;Maestro_ViewType186,7506
typedef Maestro_ViewType Maestro_XferType;Maestro_XferType188,7527
typedef Maestro_ViewType Maestro_MsgXferSafety;Maestro_MsgXferSafety197,7925
#define MAESTRO_MSG_GENERIC MAESTRO_MSG_GENERIC198,7973
#define MAESTRO_MSG_SAFE MAESTRO_MSG_SAFE199,8044
#define  MAESTRO_MSG_XFER MAESTRO_MSG_XFER200,8125
  MAESTRO_CLSV_CAST,          // msg for all group membersMAESTRO_CLSV_CAST205,8258
  MAESTRO_CLSV_SCAST,         // msg for all servers and other specified membersMAESTRO_CLSV_SCAST206,8317
  MAESTRO_CLSV_LSEND,         // msg for specified membersMAESTRO_CLSV_LSEND207,8398
  MAESTRO_CLSV_SEND,          // pt-2-pt messageMAESTRO_CLSV_SEND208,8457
  MAESTRO_CLSV_BECOME_SERVER, // becomeServer msgMAESTRO_CLSV_BECOME_SERVER211,8530
  MAESTRO_CLSV_XFER_DONE,     // xferDone msgMAESTRO_CLSV_XFER_DONE212,8580
  MAESTRO_CLSV_ASK_STATE,     // askState msgMAESTRO_CLSV_ASK_STATE213,8626
  MAESTRO_CLSV_SEND_STATE     // sendState msgMAESTRO_CLSV_SEND_STATE214,8672
} Maestro_ClSvMsgType;Maestro_ClSvMsgType215,8719
struct Maestro_ClSv_ViewData : Maestro_GrpMemb_ViewData {Maestro_ClSv_ViewData217,8743
  Maestro_EndpList servers, newServers, departedServers;servers220,8887
  Maestro_EndpList servers, newServers, departedServers;newServers220,8887
  Maestro_EndpList servers, newServers, departedServers;departedServers220,8887
  Maestro_EndpList xferServers, newXferServers, departedXferServers;xferServers221,8944
  Maestro_EndpList xferServers, newXferServers, departedXferServers;newXferServers221,8944
  Maestro_EndpList xferServers, newXferServers, departedXferServers;departedXferServers221,8944
  Maestro_EndpList clients, newClients, departedClients;clients222,9013
  Maestro_EndpList clients, newClients, departedClients;newClients222,9013
  Maestro_EndpList clients, newClients, departedClients;departedClients222,9013
  Maestro_EndpID serverCoordinator, oldServerCoordinator;serverCoordinator223,9070
  Maestro_EndpID serverCoordinator, oldServerCoordinator;oldServerCoordinator223,9070
  Maestro_ViewType myXferType, viewType;myXferType224,9128
  Maestro_ViewType myXferType, viewType;viewType224,9128
  Maestro_ClSvState state, oldState;state225,9169
  Maestro_ClSvState state, oldState;oldState225,9169
  int myServerRank, myOldServerRank;myServerRank226,9206
  int myServerRank, myOldServerRank;myOldServerRank226,9206
  Maestro_MbrshipOption myMbrshipType;  // client or servermyMbrshipType227,9243
  int stateCounter; // counts the number of cast and send upcallsstateCounter229,9304
  int startXfer;           startXfer235,9604
struct Maestro_ClSv_MsgOptions {Maestro_ClSv_MsgOptions238,9636
  Maestro_ClSv_MsgOptions() { msgXferSafety = MAESTRO_MSG_GENERIC; }Maestro_ClSv_MsgOptions239,9669
  Maestro_MsgXferSafety msgXferSafety;msgXferSafety240,9738
  Maestro_EndpList destList;           // used by scast, lsenddestList241,9777
class Maestro_ClSv_Options: public Maestro_GrpMemb_Options {Maestro_ClSv_Options245,9845
    Maestro_ClSv_Options() { reset(); }Maestro_ClSv_Options248,9915
    Maestro_MbrshipOption mbrshipType;  // MAESTRO_CLIENT or MAESTRO_SERVERmbrshipType249,9955
    Maestro_XferType xferType;          // protection level for state xferxferType250,10031
    int viewMsgFlag;viewMsgFlag254,10121
    int client;client255,10142
    void reset() {reset256,10158
struct Maestro_ClSv_DelayedMessage : public Maestro_Base {Maestro_ClSv_DelayedMessage264,10278
  Maestro_ClSv_DelayedMessage() {}Maestro_ClSv_DelayedMessage265,10337
  Maestro_ClSv_DelayedMessage(Maestro_Message &delayed_msg) {Maestro_ClSv_DelayedMessage267,10373
  Maestro_ClSv_DelayedMessage(Maestro_EndpID &delayed_dest,Maestro_ClSv_DelayedMessage271,10474
  int operator ==(Maestro_ClSv_DelayedMessage &dm) {operator ==276,10635
  Maestro_Message msg;msg280,10707
  Maestro_EndpID dest;dest281,10730
  int p2p;p2p282,10753
typedef Maestro_OrderedSet(Maestro_ClSv_DelayedMessage)Maestro_OrderedSet285,10768
class Maestro_ClSv : public Maestro_GroupMember {Maestro_ClSv288,10860
    virtual ~Maestro_ClSv(){}~Maestro_ClSv294,11012
    virtual int isServer() { return (myView.myMbrshipType == MAESTRO_SERVER); }isServer297,11106
    virtual int isClient() { return (myView.myMbrshipType == MAESTRO_CLIENT); }isClient298,11186
    virtual void xferDone() { xferDone(myView); }xferDone306,11541
    void leave() { leave333,12741
    virtual void clSv_ViewMsg_Callback(Maestro_ClSv_ViewData &viewData, clSv_ViewMsg_Callback344,12975
    virtual void clSv_AcceptedView_Callback(Maestro_ClSv_ViewData& viewData,clSv_AcceptedView_Callback347,13105
    virtual void clSv_ReceiveCast_Callback(Maestro_EndpID &origin, clSv_ReceiveCast_Callback351,13251
    virtual void clSv_ReceiveScast_Callback(Maestro_EndpID &origin, clSv_ReceiveScast_Callback354,13358
    virtual void clSv_ReceiveSend_Callback(Maestro_EndpID &origin, clSv_ReceiveSend_Callback357,13466
    virtual void clSv_ReceiveLsend_Callback(Maestro_EndpID &origin, clSv_ReceiveLsend_Callback360,13573
    virtual void clSv_Block_Callback() {}clSv_Block_Callback365,13733
    virtual void clSv_Exit_Callback() {}clSv_Exit_Callback369,13823
    virtual void clSv_Heartbeat_Callback(unsigned time) {}clSv_Heartbeat_Callback373,13901
    virtual void askState_Callback(Maestro_EndpID &origin, askState_Callback378,14008
    virtual void rcvState_Callback(Maestro_EndpID &origin, rcvState_Callback381,14105
    Maestro_ClSv_ViewData myView;myView392,14422
    Maestro_EndpList servers_nextView, xferServers_nextView;servers_nextView393,14456
    Maestro_EndpList servers_nextView, xferServers_nextView;xferServers_nextView393,14456
    Maestro_ViewType viewType_nextView;viewType_nextView394,14517
    Maestro_ClSv_DelayedMessageList xferDelayedMessages;xferDelayedMessages395,14557
    int validStateGuro;validStateGuro398,14667
    Maestro_Message stateMsg;stateMsg399,14691
    int maxStateCounter;maxStateCounter400,14721
    Maestro_EndpID stateGuro;stateGuro401,14746
    int numStates;numStates402,14776
    void grpMemb_Block_Callback() { clSv_Block_Callback(); }grpMemb_Block_Callback429,15733
    virtual void grpMemb_Exit_Callback() { grpMemb_Exit_Callback432,15837
    void grpMemb_Heartbeat_Callback(unsigned time) {grpMemb_Heartbeat_Callback440,16064

./group/Maestro_CSX.C,1044
Maestro_CSX::Maestro_CSX(Maestro_CSX_Options &ops) : Maestro_CSX14,699
Maestro_CSX::Maestro_CSX(Maestro_CSX& hcsx) :Maestro_CSX22,925
Maestro_CSX::~Maestro_CSX() {}~Maestro_CSX29,1072
Maestro_CSX::operator= (Maestro_CSX& hcsx) {operator =33,1119
Maestro_CSX::getState(Maestro_XferID &xferID, getState42,1285
Maestro_CSX::getState(Maestro_XferID &xferID, getState82,2403
Maestro_CSX::sendState(Maestro_EndpID &dest,sendState144,4022
Maestro_CSX::askState_Callback(Maestro_EndpID &origin, Maestro_Message &msg) {askState_Callback154,4243
Maestro_CSX::rcvState_Callback(Maestro_EndpID &origin, Maestro_Message &msg) {rcvState_Callback162,4410
Maestro_CSX::xferDispatcher(void *env) {xferDispatcher201,5345
Maestro_CSX::clSv_AcceptedView_Callback(Maestro_ClSv_ViewData &viewData,clSv_AcceptedView_Callback209,5535
Maestro_CSX::becomeServer(Maestro_ClSv_ViewData& vd) {becomeServer276,7640
Maestro_CSX::xferDone(Maestro_ClSv_ViewData& vd) {xferDone283,7795
Maestro_CSX::xferDone(Maestro_XferID &xferID) {xferDone290,7941

./group/Maestro_CSX.h,4292
#define __MAESTRO_CSX_H____MAESTRO_CSX_H__4,128
class Maestro_XferID : public Maestro_Base {Maestro_XferID19,741
    Maestro_XferID() : id(0) {}Maestro_XferID22,818
    Maestro_XferID(int theID) : id(theID) {}Maestro_XferID23,850
    void operator>> (ostream& out) const { out << id; }operator >>24,895
    int id;id26,960
struct Maestro_CSX_XferEnv {Maestro_CSX_XferEnv29,976
  Maestro_CSX_XferEnv(Maestro_CSX *theCsx, int theID) :Maestro_CSX_XferEnv30,1005
  Maestro_CSX *csx;csx33,1093
  Maestro_XferID xid;xid34,1113
  MAESTRO_XFER_OK,               // may continue with xferMAESTRO_XFER_OK39,1227
  MAESTRO_XFER_TERMINATED        // this xfer transaction has been terminated MAESTRO_XFER_TERMINATED40,1286
} Maestro_XferStatus;Maestro_XferStatus41,1365
struct Maestro_XferData {Maestro_XferData43,1388
  Maestro_EndpID server; server44,1414
  Maestro_Message request, reply;request45,1440
  Maestro_Message request, reply;reply45,1440
  Maestro_Semaphore sema;sema46,1474
  Maestro_XferStatus status;status47,1500
typedef Maestro_ClSv_Options     Maestro_CSX_Options;Maestro_CSX_Options50,1533
typedef Maestro_ClSv_ViewData    Maestro_CSX_ViewData;Maestro_CSX_ViewData51,1587
typedef Maestro_ClSv_MsgOptions  Maestro_CSX_MsgOptions;Maestro_CSX_MsgOptions52,1642
class Maestro_CSX : public Maestro_ClSv {Maestro_CSX54,1700
  virtual void resetState() {} // reset state when (re)starting xferresetState65,1940
  virtual void csx_ViewMsg_Callback(Maestro_CSX_ViewData &viewData, csx_ViewMsg_Callback86,2547
  virtual void csx_AcceptedView_Callback(Maestro_CSX_ViewData& viewData,csx_AcceptedView_Callback89,2669
  virtual void csx_ReceiveCast_Callback(Maestro_EndpID &origin, csx_ReceiveCast_Callback94,2799
  virtual void csx_ReceiveScast_Callback(Maestro_EndpID &origin, csx_ReceiveScast_Callback97,2896
  virtual void csx_ReceiveSend_Callback(Maestro_EndpID &origin, csx_ReceiveSend_Callback100,2994
  virtual void csx_ReceiveLsend_Callback(Maestro_EndpID &origin, csx_ReceiveLsend_Callback103,3091
  virtual void csx_Heartbeat_Callback(unsigned time) {}csx_Heartbeat_Callback108,3215
  virtual void csx_Block_Callback() {}csx_Block_Callback112,3318
  virtual void csx_Exit_Callback() {}csx_Exit_Callback116,3395
  virtual void askState_Callback(Maestro_EndpID &origin, askState_Callback120,3468
  virtual void stateTransfer_Callback(Maestro_XferID &xferID) { stateTransfer_Callback124,3593
  virtual void gotState_Callback(Maestro_XferID &xferID,gotState_Callback130,3733
  virtual void xferCanceled_Callback(Maestro_XferID &xferID) {}xferCanceled_Callback133,3826
  Maestro_XferID currentXferID;currentXferID138,3942
  Maestro_XferData *xferData;xferData139,3974
  Maestro_Lock xferLock;xferLock140,4004
  Maestro_ThreadMode xferMode;xferMode141,4029
  enum { GETSTATE_NONE, GETSTATE_SYNC, GETSTATE_ASYNC} getstateStatus;GETSTATE_NONE142,4060
  enum { GETSTATE_NONE, GETSTATE_SYNC, GETSTATE_ASYNC} getstateStatus;GETSTATE_SYNC142,4060
  enum { GETSTATE_NONE, GETSTATE_SYNC, GETSTATE_ASYNC} getstateStatus;GETSTATE_ASYNC142,4060
  enum { GETSTATE_NONE, GETSTATE_SYNC, GETSTATE_ASYNC} getstateStatus;getstateStatus142,4060
  Maestro_ClSvState state;state144,4132
  Maestro_EndpList servers, xferServers;servers145,4159
  Maestro_EndpList servers, xferServers;xferServers145,4159
  void clSv_ViewMsg_Callback(Maestro_ClSv_ViewData &viewData, clSv_ViewMsg_Callback152,4302
  void clSv_ReceiveCast_Callback(Maestro_EndpID &origin, clSv_ReceiveCast_Callback162,4602
  void clSv_ReceiveScast_Callback(Maestro_EndpID &origin, clSv_ReceiveScast_Callback167,4737
  void clSv_ReceiveSend_Callback(Maestro_EndpID &origin, clSv_ReceiveSend_Callback172,4875
  void clSv_ReceiveLsend_Callback(Maestro_EndpID &origin, clSv_ReceiveLsend_Callback177,5012
  void clSv_Heartbeat_Callback(unsigned time) { csx_Heartbeat_Callback(time); }clSv_Heartbeat_Callback185,5177
  void clSv_Exit_Callback() { csx_Exit_Callback(); }clSv_Exit_Callback189,5295
  void clSv_Block_Callback() { csx_Block_Callback(); }clSv_Block_Callback193,5395
  void askState(Maestro_EndpID &server, Maestro_Message &msg) {askState204,5815
  void sendState(Maestro_EndpID &dest, Maestro_Message &msg) {sendState208,5925

./group/Maestro_ES_ReplicatedUpdates.C,2486
Maestro_ReplicatedUpdates_Options::Maestro_ReplicatedUpdates_Options() {Maestro_ReplicatedUpdates_Options26,906
Maestro_ES_ObjectState::operator== (Maestro_ES_ObjectState &state) { operator ==44,1425
Maestro_ES_ObjectState::operator>> (Maestro_Message &msg) { operator >>49,1540
Maestro_ES_ObjectState::operator<< (Maestro_Message &msg) { operator <<54,1639
Maestro_ES_RUObjectEntry::Maestro_ES_RUObjectEntry(Maestro_ES_RUObjectEntry61,1806
Maestro_ES_RUObjectEntry::Maestro_ES_RUObjectEntry(Maestro_ES_RUObjectEntry67,1947
Maestro_ES_RUObjectEntry::operator== (Maestro_ES_RUObjectEntry &objEntry) { operator ==75,2105
Maestro_ES_IIOPRequest::Maestro_ES_IIOPRequest(Maestro_ES_IIOPRequest82,2289
Maestro_ES_IIOPRequest::operator>> (Maestro_Message &msg) {operator >>96,2660
Maestro_ES_IIOPRequest::operator<< (Maestro_Message &msg) {operator <<119,3071
Maestro_ES_ReplicatedUpdates::Maestro_ES_ReplicatedUpdates(Maestro_ES_ReplicatedUpdates165,4682
Maestro_ES_ReplicatedUpdates::~Maestro_ES_ReplicatedUpdates() { ~Maestro_ES_ReplicatedUpdates218,6123
Maestro_ES_ReplicatedUpdates::activate() {activate229,6349
Maestro_ES_ReplicatedUpdates::deactivate() {deactivate251,6868
Maestro_ES_ReplicatedUpdates::bind(bind271,7367
Maestro_ES_ReplicatedUpdates::unbind(Maestro_ORB_ObjectKey &key) {unbind308,8395
Maestro_ES_ReplicatedUpdates::unbindAll() {unbindAll331,8997
Maestro_ES_ReplicatedUpdates::viewMsg_Callback(viewMsg_Callback353,9566
Maestro_ES_ReplicatedUpdates::acceptedView_Callback(acceptedView_Callback397,11006
Maestro_ES_ReplicatedUpdates::receiveScast_Callback(receiveScast_Callback542,15119
Maestro_ES_ReplicatedUpdates::receiveSend_Callback(receiveSend_Callback620,17272
Maestro_ES_ReplicatedUpdates::block_Callback() {block_Callback636,17629
Maestro_ES_ReplicatedUpdates::askState_Callback(askState_Callback652,18164
Maestro_ES_ReplicatedUpdates::stateTransfer_Callback(Maestro_XferID &xferID) {stateTransfer_Callback685,19100
Maestro_ES_ReplicatedUpdates::gotState_Callback(gotState_Callback714,19987
Maestro_ES_ReplicatedUpdates::request_Callback(request_Callback742,20799
Maestro_ES_ReplicatedUpdates::locateRequest_Callback(locateRequest_Callback877,24683
Maestro_ES_ReplicatedUpdates::lookup(Maestro_ORB_ObjectKey &objKey) {lookup898,25412
Maestro_RUObjectAdaptor::Maestro_RUObjectAdaptor(Maestro_RUObjectAdaptor922,25948
Maestro_RUObjectAdaptor::~Maestro_RUObjectAdaptor() {~Maestro_RUObjectAdaptor931,26181

./group/Maestro_ES_ReplicatedUpdates.h,3729
#define  __MAESTRO_ES_REPLICATEDUPDATES_H____MAESTRO_ES_REPLICATEDUPDATES_H__8,269
struct Maestro_RUObjectAdaptor_Options {Maestro_RUObjectAdaptor_Options21,560
  Maestro_ORB_ObjectKey key;key22,601
  Maestro_ES_ReplicatedUpdates *orb;  orb23,630
struct Maestro_ReplicatedUpdates_Options {Maestro_ReplicatedUpdates_Options29,746
  Maestro_ORB_IIOPDispatcher *dispatcher;dispatcher31,829
  int progressInPrimaryOnly;	progressInPrimaryOnly34,946
  int nReplicas;		// # replicas (determines quorum size)nReplicas36,977
  int stateTransfer;		// set if state transfer is neededstateTransfer38,1035
  int requestsCommute;		// set if total ordering is not neededrequestsCommute39,1092
  int reinstallIOR;	reinstallIOR43,1279
  unsigned hashSize;		// hash size for the map of object bindingshashSize45,1302
  Maestro_String ORBName;ORBName47,1369
  Maestro_Etc *etc;etc48,1395
struct Maestro_ES_IIOPProfile: Maestro_Base {Maestro_ES_IIOPProfile56,1523
  int operator== (Maestro_ES_IIOPProfile &prof) { return (endp == prof.endp); }operator ==57,1569
  void operator>> (Maestro_Message &msg) { msg << port << host << endp; }operator >>58,1649
  void operator<< (Maestro_Message &msg) { msg >> endp >> host >> port; }operator <<59,1723
  int port;port60,1797
  Maestro_CORBA_String host;host61,1809
  Maestro_EndpID endp;endp62,1838
typedef Maestro_OrderedSet(Maestro_ES_IIOPProfile) Maestro_ES_IIOPProfileList;Maestro_OrderedSet65,1865
struct Maestro_ES_ObjectState: Maestro_Base {Maestro_ES_ObjectState70,2017
  Maestro_CORBA_Message stateMsg;stateMsg74,2198
  Maestro_ORB_ObjectKey objKey;objKey75,2232
typedef Maestro_OrderedSet(Maestro_ES_ObjectState) Maestro_OrderedSet78,2268
struct Maestro_ES_RUObjectEntry: Maestro_Base {Maestro_ES_RUObjectEntry84,2425
  Maestro_ES_RUObjectEntry() {}Maestro_ES_RUObjectEntry85,2473
  Maestro_RUObjectAdaptor *obj;obj93,2743
  Maestro_ORB_ObjectKey key;key94,2775
typedef Maestro_OrderedSet(Maestro_ES_RUObjectEntry)Maestro_OrderedSet97,2808
struct Maestro_ES_IIOPRequest: Maestro_Base {Maestro_ES_IIOPRequest103,2966
  Maestro_ES_IIOPRequest() {}Maestro_ES_IIOPRequest104,3012
  int operator== (Maestro_ES_IIOPRequest &req) { return 0; }operator ==115,3341
  Maestro_ORB_RequestId reqId;reqId117,3403
  Maestro_ORB_ObjectKey objKey;objKey118,3434
  int response_expected;response_expected119,3466
  Maestro_CORBA_String operation;operation120,3491
  Maestro_CORBA_Message reqBody;reqBody121,3525
typedef Maestro_OrderedSet(Maestro_ES_IIOPRequest)Maestro_OrderedSet124,3562
class Maestro_RUObjectAdaptor {Maestro_RUObjectAdaptor132,3849
  virtual void pushState(Maestro_CORBA_Message &msg) {}pushState142,4160
  virtual void getState(Maestro_CORBA_Message &msg) {}getState143,4216
  Maestro_ES_ReplicatedUpdates *orb;orb147,4288
  Maestro_ORB_ObjectKey key;key148,4325
class Maestro_ES_ReplicatedUpdates:Maestro_ES_ReplicatedUpdates163,4751
  Maestro_AdaptorBase *mbr;mbr256,7779
  Maestro_ORB_IIOPDispatcher *dispatcher;dispatcher258,7810
  Maestro_Lock mutex;mutex259,7852
  Maestro_ReplicatedUpdates_Options ops;ops260,7874
  int IIOPPort;IIOPPort261,7915
  Maestro_CORBA_String IIOPHost;IIOPHost262,7931
  Maestro_ES_IIOPProfile myProfile;myProfile263,7964
  Maestro_ES_IIOPProfileList IIOPProfiles;IIOPProfiles264,8000
  Maestro_EndpID myEndpID;myEndpID265,8043
  Maestro_CSX_ViewData view;view266,8070
  Maestro_ES_RUObjectEntryList *bindings;bindings267,8099
  int active;			// set when the ORB is active.active268,8141
  int blocked;			// set when the group is blocked.blocked269,8188
  Maestro_ES_IIOPRequestList bufferedReqs; // buffered requestsbufferedReqs270,8239

./group/Maestro_ES_Simple.C,1342
Maestro_SimpleORB_Options::Maestro_SimpleORB_Options() {Maestro_SimpleORB_Options37,925
Maestro_ES_SimpleObjectEntry::Maestro_ES_SimpleObjectEntry(Maestro_ES_SimpleObjectEntry47,1182
Maestro_ES_SimpleObjectEntry::Maestro_ES_SimpleObjectEntry(Maestro_ES_SimpleObjectEntry53,1335
Maestro_ES_SimpleObjectEntry::operator== (Maestro_ES_SimpleObjectEntry &objEntry) { operator ==61,1508
Maestro_ES_SimpleORB::Maestro_ES_SimpleORB(Maestro_ES_SimpleORB68,1698
Maestro_ES_SimpleORB::~Maestro_ES_SimpleORB() { ~Maestro_ES_SimpleORB82,2027
Maestro_ES_SimpleORB::activate() {activate92,2223
Maestro_ES_SimpleORB::deactivate() {deactivate111,2699
Maestro_ES_SimpleORB::bind(bind128,3153
Maestro_ES_SimpleORB::unbind(Maestro_ORB_ObjectKey &key) {unbind169,4257
Maestro_ES_SimpleORB::unbindAll() {unbindAll192,4855
Maestro_ES_SimpleORB::request_Callback(request_Callback213,5333
Maestro_ES_SimpleORB::locateRequest_Callback(locateRequest_Callback324,8007
Maestro_ES_SimpleORB::lookup(Maestro_ORB_ObjectKey &objKey) {lookup345,8734
Maestro_ES_SimpleORB::installIOR(Maestro_ORB_ObjectKey &key) {installIOR381,9444
Maestro_SimpleORBObjectAdaptor::Maestro_SimpleORBObjectAdaptor(Maestro_SimpleORBObjectAdaptor438,10800
Maestro_SimpleORBObjectAdaptor::~Maestro_SimpleORBObjectAdaptor() {~Maestro_SimpleORBObjectAdaptor447,11054

./group/Maestro_ES_Simple.h,1433
#define __MAESTRO_ES_SIMPLEORB_H____MAESTRO_ES_SIMPLEORB_H__8,235
struct Maestro_SimpleORBObjectAdaptor_Options {Maestro_SimpleORBObjectAdaptor_Options17,435
  Maestro_ORB_ObjectKey key;key18,483
  Maestro_ES_SimpleORB *orb;  orb19,512
struct Maestro_SimpleORB_Options {Maestro_SimpleORB_Options25,612
  Maestro_ORB_IIOPDispatcher *dispatcher;dispatcher27,679
  int installIOR;		installIOR31,806
  unsigned hashSize;		hashSize34,874
  Maestro_String ORBName;ORBName36,898
  Maestro_Etc *etc;etc37,924
struct Maestro_ES_SimpleObjectEntry: Maestro_Base {Maestro_ES_SimpleObjectEntry45,1065
  Maestro_ES_SimpleObjectEntry() {}Maestro_ES_SimpleObjectEntry46,1117
  Maestro_SimpleORBObjectAdaptor *obj;obj54,1414
  Maestro_ORB_ObjectKey key;key55,1453
typedef Maestro_OrderedSet(Maestro_ES_SimpleObjectEntry)Maestro_OrderedSet58,1486
class Maestro_SimpleORBObjectAdaptor {Maestro_SimpleORBObjectAdaptor66,1780
  Maestro_ES_SimpleORB *orb;orb78,2133
  Maestro_ORB_ObjectKey key;key79,2162
class Maestro_ES_SimpleORB:Maestro_ES_SimpleORB90,2387
  Maestro_ORB_IIOPDispatcher *dispatcher;dispatcher145,4187
  Maestro_Lock mutex;mutex146,4229
  Maestro_SimpleORB_Options ops;ops147,4251
  Maestro_ES_SimpleObjectEntryList *bindings;bindings148,4284
  Maestro_CORBA_String IIOPhost;IIOPhost149,4330
  int IIOPport;IIOPport150,4363
  int active;			// set when the ORB is active.active151,4379

./group/Maestro_Group.C,969
Maestro_GroupOptions::Maestro_GroupOptions()Maestro_GroupOptions14,580
Maestro_Group::Maestro_Group(Maestro_GroupListener &groupListener, Maestro_Group36,1073
Maestro_Group::~Maestro_Group()~Maestro_Group99,2662
Maestro_Group::cast(Maestro_Message &msg)cast111,2825
Maestro_Group::send(Maestro_EndpID &dest, Maestro_Message &msg)send127,3168
Maestro_Group::scast(Maestro_Message &msg)scast140,3511
Maestro_Group::lsend(Maestro_EndpList &destinations, Maestro_Message &msg)lsend156,3858
Maestro_Group::receiveCast_Dispatcher(hot_gctx_t gctx, void *env, receiveCast_Dispatcher177,4301
Maestro_Group::receiveSend_Dispatcher(hot_gctx_t gctx, void *env, receiveSend_Dispatcher305,6988
Maestro_Group::acceptedView_Dispatcher(hot_gctx_t gctx, void *env, acceptedView_Dispatcher323,7382
Maestro_Group::block_Dispatcher(hot_gctx_t gctx, void *env)block_Dispatcher412,9615
Maestro_Group::exit_Dispatcher(hot_gctx_t gctx, void *env)exit_Dispatcher425,9853

./group/Maestro_Group.h,3728
#define __MAESTRO_GROUP_H____MAESTRO_GROUP_H__13,580
struct Maestro_ViewData {Maestro_ViewData19,645
  Maestro_String version;version20,671
  Maestro_String groupName;groupName21,697
  Maestro_ViewID viewID;viewID22,725
  Maestro_String params;params23,750
  Maestro_String protocol;protocol24,775
  int primaryFlag;primaryFlag25,802
  Maestro_EndpID coordinator;coordinator27,822
  Maestro_EndpID myEndpID;myEndpID28,852
  int myRank;myRank29,879
  int nmembers;nmembers31,894
  Maestro_EndpList members;members32,910
  Maestro_EndpList servers;servers34,939
  Maestro_EndpList clients;clients35,967
struct Maestro_GroupOptions {Maestro_GroupOptions39,1000
  Maestro_String groupName;      groupName42,1057
  Maestro_String protocol;protocol43,1091
  Maestro_String properties;properties44,1118
  Maestro_String params;params45,1147
  Maestro_String transports;transports46,1172
  Maestro_String outboard;outboard47,1201
  unsigned heartbeatRate;heartbeatRate48,1228
  int groupdFlag;groupdFlag50,1255
  int serverFlag;serverFlag51,1273
  char **argv;argv52,1291
  int debug;debug53,1306
class Maestro_GroupListener {Maestro_GroupListener57,1324
  virtual ~Maestro_GroupListener() {}~Maestro_GroupListener60,1363
  virtual void receivedSend(Maestro_EndpID &sender, Maestro_Message &msg) {}receivedSend62,1402
  virtual void receivedCast(Maestro_EndpID &sender, Maestro_Message &msg) {}receivedCast63,1479
  virtual void receivedLsend(Maestro_EndpID &sender, Maestro_Message &msg) {}receivedLsend64,1556
  virtual void receivedScast(Maestro_EndpID &sender, Maestro_Message &msg) {}	receivedScast65,1634
  virtual void acceptedView(Maestro_ViewData &view) {}acceptedView67,1714
  virtual void blocked() {}blocked68,1769
  virtual void getState(/*OUT*/ Maestro_Message &stateMsg) const {}getState70,1798
  virtual void setState(/*IN*/ Maestro_Message &stateMsg) {}setState71,1866
class Maestro_Group : virtual public Maestro_Base {Maestro_Group75,1932
  enum ProtocolState {ProtocolState90,2351
    INITIAL,INITIAL91,2374
    NORMAL,NORMAL92,2387
    BLOCKED,BLOCKED93,2399
    LEAVINGLEAVING94,2412
  } _state;_state95,2424
  enum MsgType {MsgType97,2437
    CAST,CAST98,2454
    LSEND,LSEND99,2464
    SCAST,SCAST100,2475
    STATESTATE101,2486
  struct StateVersionNumber: public Maestro_Base {StateVersionNumber104,2502
    StateVersionNumber() { nmsgs = 0; nviews = 0; }StateVersionNumber105,2553
    virtual int operator< (const StateVersionNumber &vn) constoperator <107,2606
    virtual int operator== (const StateVersionNumber &vn) constoperator ==110,2756
    void operator<< (Maestro_Message &msg) { msg >> nmsgs >> nviews; }operator <<113,2885
    void operator>> (Maestro_Message &msg) { msg << nviews << nmsgs; }operator >>114,2956
    int messageMagic() const { return 847373; }messageMagic115,3027
    void pversion() pversion117,3076
    int nmsgs;nmsgs122,3184
    int nviews;nviews123,3199
  Maestro_GroupOptions  _options;_options127,3222
  Maestro_GroupListener *_groupListener;_groupListener128,3256
  Maestro_ViewData      _view;_view129,3297
  int                   _gotView;_gotView130,3328
  StateVersionNumber    _myStateVersionNumber;_myStateVersionNumber132,3363
  StateVersionNumber    _highestVersionNumber;_highestVersionNumber133,3410
  Maestro_Message       _mostAdvancedState;_mostAdvancedState134,3457
  int                   _nReceivedStateMsgs;_nReceivedStateMsgs135,3501
  Maestro_Semaphore     _sema;_sema137,3547
  hot_gctx_t            _gctx;_gctx138,3578
  static void heartbeat_Dispatcher(hot_gctx_t gctx, void *env, heartbeat_Dispatcher151,4023

./group/Maestro_GroupMember.C,3053
Maestro_GroupMember::Maestro_GroupMember(Maestro_GrpMemb_Options &membOps) :Maestro_GroupMember19,793
Maestro_GroupMember::Maestro_GroupMember(Maestro_GroupMember &gm) :Maestro_GroupMember36,1382
Maestro_GroupMember::operator= (Maestro_GroupMember& hgm) {operator =43,1590
Maestro_GroupMember::~Maestro_GroupMember() {~Maestro_GroupMember51,1827
Maestro_GroupMember::join() {join59,2016
Maestro_GroupMember::send(Maestro_EndpID &dest, Maestro_Message &msg) {send115,3559
Maestro_GroupMember::send(Maestro_EndpID &dest, Maestro_Message &msg,send121,3722
Maestro_GroupMember::send(Maestro_EndpID &dest, Maestro_Message &msg, send128,3928
Maestro_GroupMember::cast(Maestro_Message &msg) {cast151,4612
Maestro_GroupMember::cast(Maestro_Message &msg, cast157,4747
Maestro_GroupMember::cast(Maestro_Message &msg, cast164,4928
Maestro_GroupMember::suspect(Maestro_EndpList &suspects) {suspect186,5588
Maestro_GroupMember::changeProtocol(Maestro_String &protocol) {changeProtocol208,6120
Maestro_GroupMember::changeProperties(Maestro_String &properties) {changeProperties223,6557
Maestro_GroupMember::requestNewView() {requestNewView238,7010
Maestro_GroupMember::myEndpID(Maestro_EndpID &eid) {myEndpID253,7387
Maestro_GroupMember::leave() {leave261,7583
void Maestro_GrpMemb_Options::dump(char *title) {dump274,7934
void Maestro_GroupMember::dump(char *title) {dump289,8634
Maestro_GroupMember::receiveCast_Dispatcher(hot_gctx_t gctx, receiveCast_Dispatcher328,9768
Maestro_GroupMember::receiveSend_Dispatcher(hot_gctx_t gctx, receiveSend_Dispatcher401,12106
Maestro_GroupMember::acceptedView_Dispatcher(hot_gctx_t gctx, acceptedView_Dispatcher488,14774
Maestro_GroupMember::heartbeat_Dispatcher(hot_gctx_t gctx, heartbeat_Dispatcher604,18321
Maestro_GroupMember::block_Dispatcher(hot_gctx_t gctx, block_Dispatcher614,18594
Maestro_GroupMember::exit_Dispatcher(hot_gctx_t gctx, exit_Dispatcher623,18826
Maestro_GroupMember::setupViewState(hot_view_state_t *view_state, setupViewState639,19257
Maestro_GrpMemb_ViewData::Maestro_GrpMemb_ViewData() {Maestro_GrpMemb_ViewData690,20844
void Maestro_GrpMemb_ViewData::dump(char *title) {dump695,20945
Maestro_ViewID::Maestro_ViewID() {Maestro_ViewID718,21965
Maestro_ViewID::Maestro_ViewID(hot_view_id &view_id) {Maestro_ViewID723,22058
Maestro_ViewID& Maestro_ViewID::operator= (Maestro_ViewID &vid2) {operator =727,22135
Maestro_ViewID& Maestro_ViewID::operator= (hot_view_id &view_id) {operator =732,22243
int Maestro_ViewID::operator== (Maestro_ViewID &vid2) {operator ==737,22350
int Maestro_ViewID::operator!= (Maestro_ViewID &vid2) {operator !=742,22500
int Maestro_ViewID::operator< (Maestro_ViewID &vid2) {operator <747,22653
int Maestro_ViewID::operator> (Maestro_ViewID &vid2) {operator >753,22848
void Maestro_ViewID::operator>> (ostream& out) const {operator >>759,23043
void Maestro_ViewID::operator<< (Maestro_Message& msg) {operator <<763,23162
void Maestro_ViewID::operator>> (Maestro_Message& msg) {operator >>769,23310

./group/Maestro_GroupMember.h,4854
#define __MAESTRO_GROUP_MEMBER_H____MAESTRO_GROUP_MEMBER_H__4,145
#define MAESTRO_MESSAGE_MAGIC_VID MAESTRO_MESSAGE_MAGIC_VID21,756
    MAESTRO_MODE_SINGLE_THREADED,MAESTRO_MODE_SINGLE_THREADED24,813
    MAESTRO_MODE_MULTI_THREADEDMAESTRO_MODE_MULTI_THREADED25,847
} Maestro_ThreadMode;Maestro_ThreadMode26,879
class Maestro_ViewID : virtual public Maestro_Base {Maestro_ViewID28,902
    int messageMagic() const { return MAESTRO_MESSAGE_MAGIC_VID; }messageMagic43,1464
    hot_view_id vid;vid45,1542
struct Maestro_GrpMemb_ViewData {Maestro_GrpMemb_ViewData48,1567
    Maestro_String version;version50,1633
    Maestro_String groupName;groupName51,1661
    Maestro_EndpID myEndpID;myEndpID52,1691
    Maestro_EndpList members, newMembers, departedMembers;members53,1720
    Maestro_EndpList members, newMembers, departedMembers;newMembers53,1720
    Maestro_EndpList members, newMembers, departedMembers;departedMembers53,1720
    int nmembers, myRank, myOldRank;nmembers54,1779
    int nmembers, myRank, myOldRank;myRank54,1779
    int nmembers, myRank, myOldRank;myOldRank54,1779
    Maestro_EndpID coordinator, oldCoordinator;coordinator55,1816
    Maestro_EndpID coordinator, oldCoordinator;oldCoordinator55,1816
    Maestro_String protocol;protocol56,1864
    int groupdFlag;  groupdFlag57,1893
    Maestro_ViewID viewID;viewID58,1915
    Maestro_String params;params59,1942
    int primaryFlag;primaryFlag60,1969
    Maestro_IntList clientFlags;clientFlags61,1990
    int nGrpClients, nGrpMembers;nGrpClients62,2023
    int nGrpClients, nGrpMembers;nGrpMembers62,2023
class Maestro_GrpMemb_Options : Maestro_Options {Maestro_GrpMemb_Options66,2089
    Maestro_GrpMemb_Options() { reset(); }Maestro_GrpMemb_Options69,2152
    unsigned heartbeatRate;heartbeatRate70,2195
    Maestro_String groupName;      groupName71,2223
    Maestro_String protocol;protocol72,2259
    Maestro_String properties;properties73,2288
    Maestro_String params;params74,2319
    Maestro_String transports;transports75,2346
    Maestro_String outboard;outboard76,2377
    Maestro_ErrorHandler *errorHandler;errorHandler77,2406
    int groupdFlag;groupdFlag78,2446
    int viewMsgFlag;viewMsgFlag79,2466
    char **argv;argv80,2487
    int client;client82,2532
    int debug;debug83,2548
    void reset() {reset87,2578
enum Maestro_GrpMemb_MsgType {Maestro_GrpMemb_MsgType109,3063
    MAESTRO_GRPMBR_MSG_TYPE_DATA,MAESTRO_GRPMBR_MSG_TYPE_DATA110,3094
    MAESTRO_GRPMBR_MSG_TYPE_VIEW,MAESTRO_GRPMBR_MSG_TYPE_VIEW111,3128
	MAESTRO_GRPMBR_MSG_TYPE_STATEMAESTRO_GRPMBR_MSG_TYPE_STATE112,3162
struct Maestro_GrpMemb_MsgOptions : Maestro_Options {Maestro_GrpMemb_MsgOptions115,3197
enum Maestro_MsgSendView {Maestro_MsgSendView121,3389
    MAESTRO_MSG_SEND_UNSPECIFIED_VIEW,MAESTRO_MSG_SEND_UNSPECIFIED_VIEW122,3416
    MAESTRO_MSG_SEND_CURRENT_VIEW,MAESTRO_MSG_SEND_CURRENT_VIEW123,3455
    MAESTRO_MSG_SEND_NEXT_VIEWMAESTRO_MSG_SEND_NEXT_VIEW124,3490
class Maestro_GroupMember : virtual public Maestro_Base {Maestro_GroupMember127,3525
    grpMemb_ReceiveCast_Callback(Maestro_EndpID &origin,grpMemb_ReceiveCast_Callback187,5441
    grpMemb_ReceiveSend_Callback(Maestro_EndpID &origin,grpMemb_ReceiveSend_Callback191,5551
    grpMemb_ViewMsg_Callback(Maestro_GrpMemb_ViewData &viewData,grpMemb_ViewMsg_Callback197,5688
    grpMemb_MergeState_Callback(Maestro_MessageList /*in*/ &stateMsgs,grpMemb_MergeState_Callback201,5804
    grpMemb_ViewStateInfo_Callback(Maestro_EndpID /*in*/ &origin, Maestro_GrpMemb_ViewData /*in*/&viewData,grpMemb_ViewStateInfo_Callback205,5936
    grpMemb_AcceptedView_Callback(Maestro_GrpMemb_ViewData &viewData,grpMemb_AcceptedView_Callback211,6169
    grpMemb_Block_Callback() {}grpMemb_Block_Callback217,6340
    grpMemb_Exit_Callback() {}grpMemb_Exit_Callback222,6438
    grpMemb_Heartbeat_Callback(unsigned time) {}grpMemb_Heartbeat_Callback227,6514
    Maestro_GrpMemb_Options jops;jops232,6655
    int xfer_from_oldest;xfer_from_oldest233,6689
    enum { GRPMEMB_BOGUS, GRPMEMB_BOGUS238,6810
	   GRPMEMB_JOINING, GRPMEMB_JOINING239,6837
	   GRPMEMB_NORMAL, GRPMEMB_NORMAL240,6859
	   GRPMEMB_LEAVING GRPMEMB_LEAVING241,6880
    } mbrState;  mbrState242,6901
    int expectingViewMsg;expectingViewMsg244,6920
    int expectingViewState;expectingViewState245,6946
    Maestro_ViewID lastViewID;lastViewID246,6974
    Maestro_EndpID lastViewMsgOrigin;lastViewMsgOrigin247,7005
    Maestro_GrpMemb_ViewData myView;myView249,7044
    hot_gctx_t gctx;gctx250,7081
    Maestro_Semaphore jl_sema;	// sema for joins + leavesjl_sema252,7103
	JL_NORMAL,JL_NORMAL254,7173
	JL_JOINING,JL_JOINING255,7185
	JL_LEAVINGJL_LEAVING256,7198
    } jl_status;		// status of jl_semajl_status257,7210

./group/Maestro_Prim.C,1234
static void trace(char *s) {trace18,915
Maestro_Prim::Maestro_Prim(Maestro_Prim_Options &ops) : Maestro_CSX(ops) {Maestro_Prim23,995
Maestro_Prim::Maestro_Prim(Maestro_Prim &mprim) : Maestro_CSX(mprim) {Maestro_Prim45,1850
Maestro_Prim::~Maestro_Prim() {}~Maestro_Prim50,2005
Maestro_Prim::operator= (Maestro_Prim &mprim) {operator =53,2054
Maestro_Prim::cast(Maestro_Message &msg) {cast60,2203
Maestro_Prim::cast(Maestro_Message &msg, cast66,2302
Maestro_Prim::cast(Maestro_Message &msg, cast73,2456
Maestro_Prim::send(Maestro_EndpID &dest, send105,3230
Maestro_Prim::send(Maestro_EndpID &dest, send112,3375
Maestro_Prim::send(Maestro_EndpID &dest, send120,3563
Maestro_Prim::scast(Maestro_Message &msg) {scast154,4384
Maestro_Prim::scast(Maestro_Message &msg, scast160,4497
Maestro_Prim::scast(Maestro_Message &msg, scast167,4658
Maestro_Prim::lsend(Maestro_Message &msg, lsend200,5440
Maestro_Prim::join() {join233,6223
Maestro_Prim::leave() {leave249,6574
Maestro_Prim::csx_ViewMsg_Callback(Maestro_Prim_ViewData &viewData, csx_ViewMsg_Callback265,6948
Maestro_Prim::csx_AcceptedView_Callback(csx_AcceptedView_Callback285,7478
Maestro_Prim::csx_Block_Callback() {csx_Block_Callback363,9774

./group/Maestro_Prim.h,3933
#define __MAESTRO_PRIM_H____MAESTRO_PRIM_H__4,130
typedef Maestro_CSX_Options Maestro_Prim_Options;Maestro_Prim_Options24,995
typedef Maestro_CSX_ViewData Maestro_Prim_ViewData;Maestro_Prim_ViewData25,1045
typedef Maestro_CSX_MsgOptions Maestro_Prim_MsgOptions;Maestro_Prim_MsgOptions26,1097
    MAESTRO_PRIM_MSG_SEND,MAESTRO_PRIM_MSG_SEND29,1169
    MAESTRO_PRIM_MSG_CAST,MAESTRO_PRIM_MSG_CAST30,1196
    MAESTRO_PRIM_MSG_SCAST,MAESTRO_PRIM_MSG_SCAST31,1223
    MAESTRO_PRIM_MSG_LSENDMAESTRO_PRIM_MSG_LSEND32,1251
} Maestro_PrimMsgType;Maestro_PrimMsgType33,1278
struct Maestro_Prim_DelayedMessage : public Maestro_Base {Maestro_Prim_DelayedMessage35,1302
    Maestro_Prim_DelayedMessage() {}Maestro_Prim_DelayedMessage36,1361
    ~Maestro_Prim_DelayedMessage() {}~Maestro_Prim_DelayedMessage37,1398
    Maestro_Prim_DelayedMessage(Maestro_PrimMsgType type, Maestro_Prim_DelayedMessage39,1437
    Maestro_Prim_DelayedMessage(Maestro_PrimMsgType type, Maestro_Prim_DelayedMessage49,1671
    int operator ==(Maestro_Prim_DelayedMessage &dm) { return 0; }operator ==57,1866
    Maestro_EndpID dest;dest59,1938
    Maestro_Message msg;msg60,1963
    Maestro_PrimMsgType msgType;msgType61,1988
    Maestro_Prim_MsgOptions msgOps;msgOps62,2021
typedef Maestro_OrderedSet(Maestro_Prim_DelayedMessage)Maestro_OrderedSet65,2061
class Maestro_Prim : public Maestro_CSX {Maestro_Prim68,2153
    virtual void prim_ViewMsg_Callback(Maestro_Prim_ViewData &viewData, prim_ViewMsg_Callback119,3686
    virtual void prim_AcceptedView_Callback(Maestro_Prim_ViewData& viewData,prim_AcceptedView_Callback122,3812
    virtual void prim_PrimarityLost_Calllback(Maestro_Prim_ViewData& viewData) {prim_PrimarityLost_Calllback128,4020
    virtual void prim_ReceiveCast_Callback(Maestro_EndpID &origin, prim_ReceiveCast_Callback134,4268
    virtual void prim_ReceiveScast_Callback(Maestro_EndpID &origin, prim_ReceiveScast_Callback137,4375
    virtual void prim_ReceiveSend_Callback(Maestro_EndpID &origin, prim_ReceiveSend_Callback140,4483
    virtual void prim_ReceiveLsend_Callback(Maestro_EndpID &origin, prim_ReceiveLsend_Callback143,4590
    virtual void prim_Heartbeat_Callback(unsigned time) {}prim_Heartbeat_Callback148,4730
    virtual void prim_Block_Callback() {}prim_Block_Callback152,4846
    virtual void prim_Exit_Callback() {}prim_Exit_Callback156,4936
    virtual void askState_Callback(Maestro_EndpID &origin, askState_Callback159,5017
    virtual void stateTransfer_Callback(Maestro_XferID &xferID) { stateTransfer_Callback163,5152
    virtual void gotState_Callback(Maestro_XferID &xferID,gotState_Callback169,5301
    virtual void xferCanceled_Callback(Maestro_XferID &xferID) {}xferCanceled_Callback172,5402
    void csx_ReceiveCast_Callback(Maestro_EndpID &origin, csx_ReceiveCast_Callback189,5861
    void csx_ReceiveScast_Callback(Maestro_EndpID &origin, csx_ReceiveScast_Callback194,6002
    void csx_ReceiveSend_Callback(Maestro_EndpID &origin, csx_ReceiveSend_Callback199,6146
    void csx_ReceiveLsend_Callback(Maestro_EndpID &origin, csx_ReceiveLsend_Callback204,6287
    void csx_Heartbeat_Callback(unsigned time) { csx_Heartbeat_Callback212,6468
    void csx_Exit_Callback() { prim_Exit_Callback(); }csx_Exit_Callback219,6628
    Maestro_Prim_DelayedMessageList delayedMsgs;delayedMsgs227,6867
    Maestro_Lock primLock;primLock228,6916
    Maestro_Semaphore joinSema;joinSema229,6943
    int quorumSize;quorumSize230,6975
	PRIM_BOGUS,	        // undefined statePRIM_BOGUS232,7006
	PRIM_JOINING,	        // we didn't install a primary view yetPRIM_JOINING233,7046
	PRIM_PRIMARY,		// we have a primary view; can send messagesPRIM_PRIMARY234,7109
	PRIM_BLOCKED,		// view change/state transfer is in progressPRIM_BLOCKED235,7170
	PRIM_LEAVING		// we are leaving; no more messagesPRIM_LEAVING236,7231
    } state;state237,7282

./type/Maestro.h,42
#define __MAESTRO_H____MAESTRO_H__9,240

./type/Maestro_Config.h,534
#define MAESTRO_DEBUG MAESTRO_DEBUG12,426
#define MAESTRO_DEFAULT_PROTOCOL_PROPERTIES MAESTRO_DEFAULT_PROTOCOL_PROPERTIES22,796
#define MAESTRO_DEFAULT_TRANSPORTS MAESTRO_DEFAULT_TRANSPORTS24,882
#define MAESTRO_DEFAULT_HEARTBEAT_RATE MAESTRO_DEFAULT_HEARTBEAT_RATE25,923
#define MAESTRO_DEFAULT_OUTBOARD_MODULE MAESTRO_DEFAULT_OUTBOARD_MODULE28,989
#define MAESTRO_DEFAULT_OUTBOARD_MODULE MAESTRO_DEFAULT_OUTBOARD_MODULE30,1043
#define MAESTRO_INLINE MAESTRO_INLINE34,1112
#define MAESTRO_INLINEMAESTRO_INLINE36,1148

./type/Maestro_OrderedSet.h,215
#define __MAESTRO_ORDERED_SET_H____MAESTRO_ORDERED_SET_H__4,142
const int MAESTRO_MESSAGE_MAGIC_ORDERED_SET = 204987;MAESTRO_MESSAGE_MAGIC_ORDERED_SET18,775
#define Maestro_OrderedSet(Maestro_OrderedSet20,830

./type/Maestro_Perf.C,32
Maestro_Perf perf; perf10,234

./type/Maestro_Perf.h,911
#define __MAESTRO_PERFTEST_H____MAESTRO_PERFTEST_H__8,215
#define perf_reset(perf_reset14,309
#define perf_start(perf_start15,349
#define perf_end(perf_end16,392
#define perf_print(perf_print17,431
#define perf_reset(perf_reset19,477
#define perf_start(perf_start20,498
#define perf_end(perf_end21,522
#define perf_print(perf_print22,542
#define PERFPTS PERFPTS25,571
class Maestro_Perf {Maestro_Perf27,592
  Maestro_Perf() {Maestro_Perf29,621
  void reset() {reset33,658
  void start(int point, char *_descr = NULL) {start40,892
  void end(int point) {end48,1092
  void print() {print55,1306
  Maestro_String descr[PERFPTS];descr74,1763
  unsigned long total_latency[PERFPTS];total_latency75,1796
  unsigned long ncalls[PERFPTS];ncalls76,1836
  struct timeval before[PERFPTS], after[PERFPTS];before77,1869
  struct timeval before[PERFPTS], after[PERFPTS];after77,1869

./type/Maestro_Types.C,6628
Maestro_ErrorHandler::Maestro_ErrorHandler(Maestro_ErrorHandler& heh) {Maestro_ErrorHandler17,728
Maestro_ErrorHandler::operator= (Maestro_ErrorHandler& heh) {operator =23,906
Maestro_ErrorHandler::panic(char *context, ...) {panic30,1067
Maestro_ErrorHandler::warning(char *context, ...) {warning38,1225
Maestro_ErrorHandler::panic(hot_err_t err, char *context, ...) {panic46,1388
Maestro_ErrorHandler Maestro_DefaultErrorHandler;Maestro_DefaultErrorHandler62,1747
Maestro_Base::Maestro_Base(Maestro_ErrorHandler *error_handler) {Maestro_Base72,2221
Maestro_Base::operator<< (Maestro_Message& msg) {operator <<77,2370
Maestro_Base::operator>> (Maestro_Message& msg) { operator >>82,2507
Maestro_Base::operator>> (ostream& out) const { operator >>87,2647
Maestro_Base::operator<< (Maestro_String& msg) {operator <<92,2777
Maestro_Base::operator>> (Maestro_String& msg) { operator >>97,2913
operator<< (Maestro_Message& msg, Maestro_Base& hb) { operator <<102,3061
operator>> (Maestro_Message& msg, Maestro_Base& hb) { operator >>113,3238
operator << (ostream& out, Maestro_Base& hb) {operator <<128,3527
Maestro_Thread::create(void (*proc)(void*), void *arg,create136,3690
Maestro_Thread::usleep(int usecs) {usleep154,4175
Maestro_Semaphore::Maestro_Semaphore(int initial_value,Maestro_Semaphore164,4458
Maestro_Semaphore::Maestro_Semaphore(Maestro_Semaphore& hs) {Maestro_Semaphore172,4699
Maestro_Semaphore::~Maestro_Semaphore() { ~Maestro_Semaphore178,4848
Maestro_Semaphore::operator = (Maestro_Semaphore& hs) {operator =184,4997
Maestro_Semaphore::inc() { inc191,5153
Maestro_Semaphore::dec() { dec197,5267
Maestro_Lock::Maestro_Lock(Maestro_ErrorHandler *error_handler) :Maestro_Lock204,5454
Maestro_Lock::Maestro_Lock(Maestro_Lock& hl) {Maestro_Lock210,5647
Maestro_Lock::~Maestro_Lock() { ~Maestro_Lock216,5789
Maestro_Lock::operator= (Maestro_Lock& hl) {operator =222,5930
Maestro_Lock::lock() { lock229,6070
Maestro_Lock::unlock() { unlock235,6186
Maestro_Barrier::Maestro_Barrier(Maestro_BarrierState theState,Maestro_Barrier243,6385
Maestro_Barrier::Maestro_Barrier(Maestro_Barrier& hc) {Maestro_Barrier252,6668
Maestro_Barrier::~Maestro_Barrier() { ~Maestro_Barrier257,6807
Maestro_Barrier::operator = (Maestro_Barrier& hc) {operator =266,6946
Maestro_Barrier::close() { close273,7096
Maestro_Barrier::open() { open280,7204
Maestro_Barrier::pass() { pass292,7415
Maestro_EndpID::Maestro_EndpID(Maestro_ErrorHandler *error_handler) : Maestro_EndpID306,7678
Maestro_EndpID::Maestro_EndpID(hot_endpt_t ep, Maestro_EndpID309,7783
Maestro_EndpID::operator== (Maestro_EndpID &eid) {operator ==316,7936
Maestro_EndpID::operator!= (Maestro_EndpID &eid) {operator !=321,8048
Maestro_EndpID::operator= (Maestro_EndpID &eid) {operator =326,8144
Maestro_EndpID::operator= (hot_endpt_t &ep) {operator =332,8252
Maestro_EndpID::operator << (Maestro_Message &msg) {operator <<338,8338
Maestro_EndpID::operator >> (Maestro_Message &msg) {operator >>343,8437
Maestro_EndpList::Maestro_EndpList(Maestro_ErrorHandler *error_handler) :Maestro_EndpList350,8610
Maestro_EndpList::Maestro_EndpList(Maestro_EndpID& eid, Maestro_EndpList353,8727
Maestro_EndpList::Maestro_EndpList(Maestro_EndpList& ep_list, Maestro_EndpList357,8878
Maestro_EndpList::Maestro_EndpList(hot_endpt_t endps[], unsigned nendp,Maestro_EndpList361,9039
Maestro_IntList::Maestro_IntList(Maestro_ErrorHandler *error_handler = 0) :Maestro_IntList377,9474
Maestro_IntList::Maestro_IntList(int &i, Maestro_ErrorHandler *error_handler = 0) :Maestro_IntList380,9592
Maestro_IntList::Maestro_IntList(Maestro_IntList& ilist, Maestro_IntList383,9721
Maestro_IntList::Maestro_IntList(int *elem, unsigned nelem, Maestro_IntList387,9879
Maestro_ULongList::Maestro_ULongList(Maestro_ErrorHandler *error_handler = 0) :Maestro_ULongList392,10044
Maestro_ULongList::Maestro_ULongList(Maestro_ULong &i, Maestro_ULongList395,10168
Maestro_ULongList::Maestro_ULongList(Maestro_ULongList& ilist, Maestro_ULongList399,10323
Maestro_ULongList::Maestro_ULongList(Maestro_ULong *elem, unsigned nelem, Maestro_ULongList403,10491
Maestro_Message::Maestro_Message(Maestro_ErrorHandler *error_handler) :Maestro_Message409,10755
Maestro_Message::Maestro_Message(Maestro_Message& src_msg,Maestro_Message414,10890
Maestro_Message::Maestro_Message(hot_msg_t hmsg, Maestro_Message421,11139
Maestro_Message::Maestro_Message(void *data,Maestro_Message428,11372
Maestro_Message::~Maestro_Message() {~Maestro_Message437,11632
Maestro_Message::operator= (Maestro_Message &src_msg) {operator =443,11789
Maestro_Message::operator<<= (Maestro_Message &src_msg) {operator <<=455,12102
Maestro_Message::reset() {reset467,12409
Maestro_Message::size() { size475,12564
Maestro_Message::getPos() {getPos483,12713
Maestro_Message::setPos(unsigned offset) {setPos491,12871
Maestro_Message::seek(int offset, Maestro_MsgSeek whence) { seek497,13016
Maestro_Message::readDir(Maestro_MsgReadDir dir) {readDir503,13198
Maestro_Message::align(unsigned nbytes) {align509,13389
Maestro_Message::read(int &i) {read515,13530
Maestro_Message::read(void *buf, unsigned size) {read531,13989
Maestro_Message::look(void *&data, unsigned size) {look545,14427
Maestro_Message::write(int i) {write551,14580
Maestro_Message::write(void *buf, int size) {write564,14962
Maestro_Message::pack(Maestro_Message *msgs, unsigned nmsgs) {pack576,15323
Maestro_Message::unpack(Maestro_Message *&msgs, unsigned &nmsgs) {unpack586,15624
Maestro_Message::isWritable() {isWritable600,15984
Maestro_Message::operator<< (Maestro_Message &data_msg) {operator <<606,16091
Maestro_Message::operator>> (Maestro_Message &data_msg) {operator >>613,16295
Maestro_String::Maestro_String(char *str) {Maestro_String631,16769
Maestro_String::~Maestro_String() { ~Maestro_String650,17095
Maestro_String::Maestro_String(Maestro_String& str) {Maestro_String661,17279
Maestro_String::operator = (Maestro_String &str) {operator =684,17738
Maestro_String::operator= (char *p) {operator =719,18359
Maestro_String::operator== (Maestro_String& str) {operator ==747,18802
Maestro_String::operator >> (ostream &out) const {operator >>758,19069
Maestro_String::operator >> (Maestro_Message& msg) {operator >>767,19236
Maestro_String::operator << (Maestro_Message& msg) {operator <<777,19434
Maestro_String::operator += (char *src) {operator +=798,19818
Maestro_String::operator += (Maestro_String &src) {operator +=826,20353
char Maestro_String::NULL_STRING[1] = "";NULL_STRING856,20987

./type/Maestro_Types.h,6150
#define __MAESTRO_TYPES_H____MAESTRO_TYPES_H__4,131
typedef unsigned long Maestro_ULong;Maestro_ULong72,1715
#define check_err(check_err74,1753
#define putd(putd78,1868
#define putd(putd80,1913
const int MAESTRO_MESSAGE_MAGIC_BASE       = 498752;MAESTRO_MESSAGE_MAGIC_BASE84,2001
const int MAESTRO_MESSAGE_MAGIC_BUFFER     = 269385;MAESTRO_MESSAGE_MAGIC_BUFFER85,2054
const int MAESTRO_MESSAGE_MAGIC_INT        = 153274;MAESTRO_MESSAGE_MAGIC_INT86,2107
const int MAESTRO_MESSAGE_MAGIC_ENDP_ID    = 807649;MAESTRO_MESSAGE_MAGIC_ENDP_ID87,2160
const int MAESTRO_MESSAGE_MAGIC_ENDP_LIST  = 340127;MAESTRO_MESSAGE_MAGIC_ENDP_LIST88,2213
const int MAESTRO_MESSAGE_MAGIC_INT_LIST   = 524938;MAESTRO_MESSAGE_MAGIC_INT_LIST89,2266
const int MAESTRO_MESSAGE_MAGIC_STRING     = 935810;MAESTRO_MESSAGE_MAGIC_STRING90,2319
const int MAESTRO_MESSAGE_MAGIC_MESSAGE    = 693847;MAESTRO_MESSAGE_MAGIC_MESSAGE91,2372
typedef hot_err_t Maestro_Status;Maestro_Status95,2501
class Maestro_Error {Maestro_Error98,2576
  static Maestro_Status create(char *errStr) {create100,2606
  static void release(Maestro_Status st) {release104,2696
  static char* errString(Maestro_Status st) {errString108,2769
const Maestro_Status MAESTRO_OK = HOT_OK;MAESTRO_OK113,2857
class Maestro_ErrorHandler {Maestro_ErrorHandler118,3051
  Maestro_ErrorHandler() {}Maestro_ErrorHandler120,3088
  virtual ~Maestro_ErrorHandler() {}~Maestro_ErrorHandler122,3168
class Maestro_Base {Maestro_Base135,3680
  Maestro_Base(Maestro_Base& hb) {}Maestro_Base139,3782
  virtual ~Maestro_Base() {}~Maestro_Base140,3818
  virtual Maestro_Base& operator= (Maestro_Base& hb) { return *this; }operator =141,3847
  virtual int messageMagic() const { return MAESTRO_MESSAGE_MAGIC_BASE; }messageMagic147,4143
  Maestro_ErrorHandler *error;error154,4384
  hot_err_t err;err155,4415
struct Maestro_Options : private Maestro_Base {Maestro_Options163,4683
  virtual void reset() {}reset164,4731
struct Maestro_ThreadOps {Maestro_ThreadOps170,4839
  int stackSize;stackSize171,4866
class Maestro_Thread : virtual public Maestro_Base {Maestro_Thread174,4887
class Maestro_Semaphore : virtual public Maestro_Base {Maestro_Semaphore186,5205
   hot_sema_t sema;sema199,5560
class Maestro_Lock : virtual public Maestro_Base {Maestro_Lock205,5664
  hot_lock_t lck;lck217,5960
  MAESTRO_BARRIER_OPEN, MAESTRO_BARRIER_OPEN224,6076
  MAESTRO_BARRIER_CLOSED MAESTRO_BARRIER_CLOSED225,6101
} Maestro_BarrierState;Maestro_BarrierState226,6127
class Maestro_Barrier : virtual public Maestro_Base {Maestro_Barrier229,6227
  int isOpen() { return (state == MAESTRO_BARRIER_OPEN); }isOpen240,6570
  int isClosed() { return (state == MAESTRO_BARRIER_CLOSED); }isClosed241,6629
  Maestro_Semaphore *sema;sema245,6706
  Maestro_Lock *mutex;mutex246,6733
  int nwaiting;nwaiting247,6756
  Maestro_BarrierState state;state248,6772
struct Maestro_String : virtual public Maestro_Base {Maestro_String254,6887
  int messageMagic() const { return MAESTRO_MESSAGE_MAGIC_STRING; }messageMagic264,7299
  char *s;s270,7491
  int size;size271,7502
  static char NULL_STRING[1];NULL_STRING274,7524
  MAESTRO_MSG_SEEK_FROM_HEAD,MAESTRO_MSG_SEEK_FROM_HEAD282,7706
  MAESTRO_MSG_SEEK_FROM_TAIL,MAESTRO_MSG_SEEK_FROM_TAIL283,7736
  MAESTRO_MSG_SEEK_FROM_CURRENTMAESTRO_MSG_SEEK_FROM_CURRENT284,7766
} Maestro_MsgSeek;Maestro_MsgSeek285,7798
  MAESTRO_MSG_READ_LEFT,MAESTRO_MSG_READ_LEFT288,7833
  MAESTRO_MSG_READ_RIGHTMAESTRO_MSG_READ_RIGHT289,7858
} Maestro_MsgReadDir;Maestro_MsgReadDir290,7883
class Maestro_Message : virtual public Maestro_Base {Maestro_Message292,7906
  virtual Maestro_Message& operator>> (int &i) { operator >>317,8689
  virtual Maestro_Message& operator>> (Maestro_ULong &u) {operator >>321,8772
  virtual Maestro_Message& operator<< (int i) { operator <<333,9072
  virtual int operator== (Maestro_Message &hm) { return 0; } operator ==350,9743
  int messageMagic() const { return MAESTRO_MESSAGE_MAGIC_MESSAGE; }  messageMagic355,9963
  void setName(char *s) { name = s; }setName357,10035
  hot_msg_t& getHotMsg() { return msg; }getHotMsg359,10074
  hot_msg_t msg;msg362,10127
  Maestro_String name;name363,10144
struct Maestro_Buffer : virtual public Maestro_Base {Maestro_Buffer369,10252
  Maestro_Buffer(void *theBuf, int theSize) {Maestro_Buffer371,10309
  void operator << (Maestro_Message &msg) { msg.read(buf, size); }operator <<376,10398
  void operator >> (Maestro_Message &msg) { msg.write(buf, size); }operator >>377,10465
  void *buf;buf379,10536
  int size;size380,10549
class Maestro_EndpID : virtual public Maestro_Base {Maestro_EndpID385,10638
  int messageMagic() const { return MAESTRO_MESSAGE_MAGIC_ENDP_ID; }messageMagic402,11223
  void operator>> (ostream &out) const { out << endpID.name << endl; }operator >>404,11293
  hot_endpt_t& getHotEndpt() { return endpID; }getHotEndpt406,11365
  hot_endpt_t endpID; // defined as struct {char name[HOT_ENDP_MAX_NAME_SIZE];} endpID410,11426
typedef Maestro_OrderedSet(Maestro_EndpID) Maestro_EndpList_Base;Maestro_OrderedSet416,11590
class Maestro_EndpList : virtual public Maestro_EndpList_Base {Maestro_EndpList418,11657
  int messageMagic() const { return MAESTRO_MESSAGE_MAGIC_ENDP_LIST; }messageMagic432,12087
typedef Maestro_OrderedSet(Maestro_ULong) Maestro_ULongList_Base;Maestro_OrderedSet438,12291
class Maestro_IntList: virtual public Maestro_IntList_Base {Maestro_IntList440,12358
  int messageMagic() const { return MAESTRO_MESSAGE_MAGIC_INT_LIST; }messageMagic452,12742
  int& operator[](int i) { return Maestro_IntList_Base::operator[]((int)i); }operator []453,12812
class Maestro_ULongList: virtual public Maestro_ULongList_Base {Maestro_ULongList456,12894
  int messageMagic() const { return MAESTRO_MESSAGE_MAGIC_INT_LIST; }messageMagic468,13314
  Maestro_ULong& operator[](Maestro_ULong i) { return Maestro_ULongList_Base::operator[]((int)i); }operator []469,13384
typedef Maestro_OrderedSet(Maestro_Message) Maestro_MessageList;Maestro_OrderedSet473,13489

./util/newkey.C,43
main(int argc, char *argv[]) {main13,235

./util/read_ior.C,41
main(int argc, char* argv[]) {main5,83
